[-] General.
	- Site.
		https://www.tensorflow.org/

[-] Usage.
	- TensorBoard.
		Run.
			tensorboard --logdir=path/to/log-directory
		Open web browser.
			http://localhost:6006/

[-] Installation.
	- Windows.
		TensorFlow supports only 64-bit Python 3.5 on Windows.

	- Build and install from sources.
		https://www.tensorflow.org/install/install_sources
		https://bazel.build/versions/master/docs/install-ubuntu.html

	- Install from wheel files (old versions).
		https://www.tensorflow.org/versions/
		https://www.tensorflow.org/versions/r1.0/install/install_windows
		https://www.tensorflow.org/versions/r0.12/get_started/os_setup

		pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-1.0.1-cp35-cp35m-win_amd64.whl
		pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-0.12.1-cp27-none-linux_x86_64.whl
		pip install --upgrade https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.1-cp35-cp35m-win_amd64.whl

[-] Model.
	- ResNet.
		REF [site] >> https://github.com/tensorflow/models/tree/master/resnet

		Install Bazel.
			REF [doc] >> bazel_usage_guide.txt
		Download CIFAR-10/CIFAR-100 dataset.
			wget https://www.cs.toronto.edu/~kriz/cifar-10-binary.tar.gz
			wget https://www.cs.toronto.edu/~kriz/cifar-100-binary.tar.gz
		Uncompress dataset.
			tar xvf cifar-10-binary.tar.gz
			tar xvf cifar-100-binary.tar.gz
		(Optional) modify files.
			To use w28-10 wide residual network:
				In ${TENSORFLOW_MODELS_HOME}/resnet/resnet_model.py:
					Uncomment 'filters = [16, 160, 320, 640]' in line 87.
				In ${TENSORFLOW_MODELS_HOME}/resnet/resnet_main.py:
                	<before>
                	num_residual_units=5,
                	<after>
                	num_residual_units=4, (?)
		Build for GPU.
			bazel build -c opt --config=cuda resnet/...
		Train model.
			Unix:
				bazel-bin/resnet/resnet_main --train_data_path=${CIFAR10_DATASET_HOME}/data_batch* --log_root=./resnet_model_cifar10 --train_dir=./resnet_model_cifar10/train --dataset='cifar10' --num_gpus=1
				bazel-bin/resnet/resnet_main --train_data_path=${CIFAR100_DATASET_HOME}/train.bin --log_root=./resnet_model_cifar100 --train_dir=./resnet_model_cifar100/train --dataset='cifar100' --num_gpus=1
			Windows:
	            python bazel-bin/resnet/resnet_main --train_data_path=${CIFAR10_DATASET_HOME}/data_batch* --log_root=./resnet_model_cifar10 --train_dir=./resnet_model_cifar10/train --dataset=cifar10 --num_gpus=1
					==> Not --dataset='cifar10' but --dataset=cifar10.
	            python bazel-bin/resnet/resnet_main --train_data_path=${CIFAR100_DATASET_HOME}/train.bin --log_root=./resnet_model_cifar100 --train_dir=./resnet_model_cifar100/train --dataset=cifar100 --num_gpus=1
					==> Not --dataset='cifar100' but --dataset=cifar100.
		(Optional) check on its progress using tensorboard.
            tensorboard --logdir=/tmp/resnet_model
        Evaluate the model.
			Unix:
	        	bazel-bin/resnet/resnet_main --eval_data_path=${CIFAR10_DATASET_HOME}/test_batch.bin --log_root=./resnet_model_cifar10 --eval_dir=./resnet_model_cifar10/test --mode=eval --dataset='cifar10' --num_gpus=0
	        	bazel-bin/resnet/resnet_main --eval_data_path=${CIFAR100_DATASET_HOME}/test.bin --log_root=./resnet_model_cifar100 --eval_dir=./resnet_model_cifar100/test --mode=eval --dataset='cifar100' --num_gpus=0
			Windows:
        		python bazel-bin/resnet/resnet_main --eval_data_path=${CIFAR10_DATASET_HOME}/test_batch.bin --log_root=./resnet_model_cifar10 --eval_dir=./resnet_model_cifar10/test --mode=eval --dataset=cifar10 --num_gpus=0
	        	python bazel-bin/resnet/resnet_main --eval_data_path=${CIFAR100_DATASET_HOME}/test.bin --log_root=./resnet_model_cifar100 --eval_dir=./resnet_model_cifar100/test --mode=eval --dataset=cifar100 --num_gpus=0
