[-] Building (Common)
	-. external library를 사용하기 위해서 CMake GUI에서 option을 설정하면 아래의 오류 발생.
		QPBO not installed, run make externalLibs first and configure again
		TRWS not installed, run make externalLibs first and configure again
		MAXFLOW not installed, run make externalLibs first and configure again
		MAXFLOW_IBFS not installed, run make externalLibs first and configure again
		MRF not installed, run make externalLibs first and configure again
		==> "make externalLibs"를 실행시킬 makefile을 찾을 수 없음.
		==> 아래의 directory에서 patch를 위한 shell script를 실행.
				${OPENGM_HOME}/src/external/patches/ConicBundle
				${OPENGM_HOME}/src/external/patches/IBFS
				${OPENGM_HOME}/src/external/patches/MaxFlow
				${OPENGM_HOME}/src/external/patches/MRF
				${OPENGM_HOME}/src/external/patches/QPBO
				${OPENGM_HOME}/src/external/patches/TRWS

				Windows 환경에서는 Cygwin을 이용해서 patch 수행.
				patch script를 실행하면 external library를 download해서 patch를 수행.
			아래의 directory에 patch된 external library file이 생성됨.
				${OPENGM_HOME}/src/external/ConicBundle-v0.3.11.src-patched
				${OPENGM_HOME}/src/external/MaxFlow-v3.02.src-patched
				${OPENGM_HOME}/src/external/ibfs.src-patched
				${OPENGM_HOME}/src/external/MRF-v2.1.src-patched
				${OPENGM_HOME}/src/external/QPBO-v1.3.src-patched
				${OPENGM_HOME}/src/external/TRWS-v1.3.src-patched
			CMake GUI에서 아래 항목들에 patch된 external library directory를 지정.
				MAXFLOW_PATCHEDSRCDIR
				MAXFLOW_IBFS_PATCHEDSRCDIR
				MRF_PATCHEDSRCDIR
				QPBO_PATCHEDSRCDIR
				TRWS_PATCHEDSRCDIR
		==> Windows에서는 ConicBundle의 building을 실패함.
			Linux에서는 build됨.

[-] Building (MSVC)
	-. test를 building하면서 잦은 오류가 발생해서 test는 building에서 제외.
		CMake GUI에서 BUILD_TESTING 항목을 지정하지 않음.
	-. Matlab을 사용하는 경우 32bit인지 64bit인지 확인 필요.
		CMake GUI에서 Configure하면 아래와 같은 정보가 출력.
			Detected a 32 Bit Machine
		==> CMake GUI에서 아래의 항목을 적절히 설정해야 함.
				MATLAB -> ${MATLAB_HOME} (???)
				MEXEXT -> mexw32 / mexw64 (Windows), mexglx / mexa64 (Linux) (???)
					이 항목을 값을 변경해도 실제 적용이 되지 않는 듯함.
				MATLAB_INCLUDE_DIR
				MATLAB_LIBRARY_DIR
	-. boost::get 관련 오류 발생
		==> MSVC에서 제공하는 get과 충돌하는 문제인 듯함.
			아래와 같이 수정.
			<수정전>
			get(m_time_map, current_vertex)
			<수정후>
			boost::get(m_time_map, current_vertex)
	-. libDAI library와 관계된 project building 시에 아래와 같은 오류 발생.
		Cannot open include file: 'tr1/unordered_map': No such file or directory
		==> WINDOWS macro가 정의되어 않지 않아서 발생.
			_WINDOWS macro는 정의되어 있음.
			<수정전>
			#if defined(WINDOWS)
			<수정후>
			#if defined(WINDOWS) || defined(_WINDOWS)
	-. libDAI library와 관계된 project building 시에 _ITERATOR_DEBUG_LEVEL 관련 오류 발생.
		==> OpenGM library가 linking하는 libDAI library의 build mode가 달라서 발생.
			release build (libdai.lib) or debug build (libdai_d.lib)가 일치하도록 linking library을 설정해야 함.
	-. __mpz_struct와 관계된 ostream 오류 발생.
		unresolved external symbol "__declspec(dllimport) class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,struct __mpz_struct const *)"
		==> GMP library와의 linking에서 문제가 있는 듯함.
			GMP library 대신에 MPIR library를 사용해 해결.
			MPIR library는 GMP library를 포함하고 있음.
			MPIR library를 Windows 환경에서 building 가능.
	-. Matlab mex와 관련된 오류 발생.
		invalid numeric argument '/Wl,--version-script,/server/opt/matlab/mexFunction.map'
		==> opengmBuild.mexa64는 64bit Linux용 mex file인 듯함.
			Matlab에서 OpenGM을 사용하지 않는다면 무시해도 됨.
		==> 오류를 없애고자 한다면 C/C++ compiler option의 Command Line options에서 해당 설정을 삭제.
