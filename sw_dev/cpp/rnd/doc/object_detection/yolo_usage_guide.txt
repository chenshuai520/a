[-] General.
	- Site.
		https://pjreddie.com/darknet/yolo/
		https://github.com/AlexeyAB/darknet

[-] Usage.
	- Detect (C/C++).
		wget https://pjreddie.com/media/files/yolov3.weights
		wget https://pjreddie.com/media/files/yolov3-tiny.weights

		./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg
		./darknet detect cfg/yolov3-tiny.cfg yolov3-tiny.weights data/dog.jpg
		./darknet detector test cfg/coco.data cfg/yolov3.cfg yolov3.weights data/dog.jpg

		./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg -thresh 0.2

		When using a webcam:
		./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights

	- Detect (Python).
		export LD_LIBRARY_PATH+=${DARKNET_HOME}
			or copy libdarknet.so to the working directory.
		export PYTHONPATH+=${DARKNET_HOME}/python

		python darknet_basic.py
			${SWDT_PYTHON_HOME}/rnd/test/machine_learning/darknet/darknet_basic.py

[-] Installation (YOLO3-4-Py).
	https://github.com/madhawav/YOLO3-4-Py

	- Install dependencies.
		conda install cython numpy opencv
		(Optional) sudo apt install python3-dev
	- Build darknet.
	- (Optional) edit ${YOLO3-4-Py_HOME}/setup.py.
		<before>
		library_paths = [".", "./__libdarknet"]
		<after>
		library_paths = [".", "./__libdarknet", "/home/sangwook/lib_repo/cpp/darknet_github_gpu", "/usr/lib/x86_64-linux-gnu"]
	- Set environment variable.
		export DARKNET_HOME=/home/sangwook/lib_repo/cpp/darknet_github
		export CUDA_HOME=/usr/local/cuda
		export GPU=1
		export OPENCV=1

		export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
	- Install.
		cd ${YOLO3-4-Py_HOME}
		python setup.py install
		pip install .

		pip install yolo34py
		pip install yolo34py-gpu
	- Test.
		python image_demo.py

[-] Building.
	- Build darknet.
		Cannot compile by g++ (C, not C++).

		cd $DARKNET_HOME
		Edit Makefile.
			GPU=1
			CUDNN=1
			OPENCV=1
			OPENMP=1
			==> NOTE [caution] >> When using GPU, detection results are different. 

		export PATH=/usr/local/cuda/bin:$PATH
		make

[-] Training.
	REF [site] >>
		https://pjreddie.com/darknet/yolo/
		https://github.com/AlexeyAB/darknet

	- Generate label files.
		REF [site] >> labelme2yolo.py & pcloud2yolo.py

		Darknet wants a .txt file for each image with a line for each ground truth object in the image that looks like:
			<object-class> <x> <y> <width> <height>
		where x, y, width, and height are relative to the image's width and height.
			<x> <y> = center of rectangle.
			<width> = <absolute_width> / <image_width>, <height> = <absolute_height> / <image_height>.

		==> Images and labels are saved into different directories. (?)
			train_images/img1.jpg
			train_labels/img1.txt

	- Create files.
		REF [site] >> https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects

		custom_objects.data
			classes= 2
			train = custom_objects_train.txt
			valid = custom_objects_test.txt
			names = custom_objects.names
			backup = backup/
		custom_objects.cfg
			If you changed width= or height= in your cfg-file, then new width and height must be divisible by 32.
			If error Out of memory occurs then in .cfg-file you should increase subdivisions=16, 32 or 64.
		custom_objects.names
			object_name1
		custom_objects_train.txt
			train_images/img1.jpg
		custom_objects_test.txt
			test_images/img1.jpg

		==> If character set or line break is different, some error may occur.

	- Train.
		wget https://pjreddie.com/media/files/darknet53.conv.74

		./darknet detector train custom_objects.data custom_objects.cfg darknet53.conv.74

		./darknet detector train cfg/voc.data cfg/yolov3-voc.cfg darknet53.conv.74
		./darknet detector train cfg/coco.data cfg/yolov3.cfg darknet53.conv.74

		Multiple GPUs:
		./darknet detector train cfg/coco.data cfg/yolov3.cfg darknet53.conv.74 -gpus 0,1,2,3

		Stop and Restart training from a checkpoint:
		./darknet detector train cfg/coco.data cfg/yolov3.cfg backup/yolov3.backup -gpus 0,1,2,3

[-] Trouble shooting.
	- Input size error.
		<error>
			Layer before convolutional layer must output image.
			darknet: ./src/utils.c:256: error: Assertion `0' failed.
		<cause>
			An input image is too small.

	- Segmentation fault.
		<error>
			Resizing
			Segmentation fault (core dumped)
		<cause>
			channels != 3 in the cfg-file.	
