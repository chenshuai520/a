[-] General.
	- Site.
		http://hciweb2.iwr.uni-heidelberg.de/opengm/

		https://github.com/opengm
		https://github.com/opengm-externals

[-] Usage.
    - Only need header file when using OpenGM library.
		There is no static or shared library file to link for OpenGM.
    - Need to link external libraries in order to use OpenGM in client applications.

    - I think that opengm-externals repository is not required (2016/04/29).

[-] Building GitHub (CMake): 2016/05/04.
	- Prepare to download external libraries (configure & generate).
		Set WITH_xxx options to use external libraries, and configure.
		Can see as follows:
		<error>
			QPBO not installed, run make externalLibs first and configure again
			TRWS not installed, run make externalLibs first and configure again
			MAXFLOW not installed, run make externalLibs first and configure again
			MAXFLOW_IBFS not installed, run make externalLibs first and configure again
			MRF not installed, run make externalLibs first and configure again
		<solution>
			Even though the warning messages shown above, configure & generate in CMake.
			Configure & generate to create projects.
	- Download external libraries.
		<method 1>
			Unix-like system:
				Find generated Makefile and run "make externalLibs". (???)
			Windows:
				Open the generated solution and build the externalLibs project.
		<method 2>
		    Run shell scripts in directories shown below to patch.
				${OPENGM_HOME}/src/external/patches/ConicBundle
				${OPENGM_HOME}/src/external/patches/IBFS
				${OPENGM_HOME}/src/external/patches/MaxFlow
				${OPENGM_HOME}/src/external/patches/MRF
				${OPENGM_HOME}/src/external/patches/QPBO
				${OPENGM_HOME}/src/external/patches/TRWS
			In Windows: use Cygwin to patch.
			If patch scripts are run, patch after downloading external libraries.
		<result>
			External library files are downloaded in directories shown below and are patched.
				${OPENGM_HOME}/src/external/ConicBundle-v0.3.11.src-patched
				${OPENGM_HOME}/src/external/MaxFlow-v3.02.src-patched
				${OPENGM_HOME}/src/external/ibfs.src-patched
				${OPENGM_HOME}/src/external/MRF-v2.1.src-patched
				${OPENGM_HOME}/src/external/QPBO-v1.3.src-patched
				${OPENGM_HOME}/src/external/TRWS-v1.3.src-patched
	- Configure and generate.
		Set CMAKE_DEBUG_POSTFIX to d.
		After downloading external libraries, run CMake again and configure and generates.
			Create projects again for downloaded external libraries.
		Unset BUILD_TESTING.
			Many errors arise in test projects
		Check directories of downloaded external libraries.
			MAXFLOW_PATCHEDSRCDIR
			MAXFLOW_IBFS_PATCHEDSRCDIR
			MRF_PATCHEDSRCDIR
			QPBO_PATCHEDSRCDIR
			TRWS_PATCHEDSRCDIR
	- Build.
		Fail to build ConicBundl in Windows.
			Can build in Linux.
		Built external libraries는 ${OPENGM_HOME}/build_xxx/src/external/Release & Debug directory에 생성.
		    libexternal-library-maxflow-ibfs.a / external-library-maxflow-ibfs.lib
		    libexternal-library-maxflow.a / external-library-maxflow.lib
		    libexternal-library-mrf.a / external-library-mrf.lib
		    libexternal-library-qpbo.a / external-library-qpbo.lib
		    libexternal-library-trws.a / external-library-trws.lib
	- Install.
		Install header files only.
		Install external libraries to ${INSTALL_PREFIX}/lib/opengm/externals.
		==> Check if external libraries are copied to ${INSTALL_PREFIX} individually.

[-] Trouble shooting (Common).
    - Error on function's duplicate defintion.
        Occur because function definitions are included in header files.
            ${OPENGM_HOME}/include/opengm/graphicalmodel/decomposition/graphicalmodeldecomposition.hxx
        ==> Change the functions as inline.
            void GraphicalModelDecomposition::complete() -> inline void GraphicalModelDecomposition::complete()
            void GraphicalModelDecomposition::reorder() -> inline void GraphicalModelDecomposition::reorder()

[-] Trouble shooting (VC).
	- Linking error in HDF5 library.
		<cause>
			Do not link HDF5 shared library.
		<solution>
			Link with HDF5 as a shared library.
				libhdf5.lib
				define _HDF5USEDLL_. (???)
			Link with HDF5 as a static library.
			==> When using shared libraries, I think linking error cannot be solved. (???)

	- Linking error with HDF in photomontage-merging & photomontage-stitching projects.
		Link HDF5 as static libraries.
			${INSTALL_PREFIX}/libhdf5.lib
			${INSTALL_PREFIX}/libhdf5_hl.lib

	- Test를 building하면서 잦은 오류가 발생해서 test는 building에서 제외.
		CMake GUI에서 BUILD_TESTING 항목을 지정하지 않음.
	- Matlab을 사용하는 경우 32bit인지 64bit인지 확인 필요.
		CMake GUI에서 Configure하면 아래와 같은 정보가 출력.
			Detected a 32 Bit Machine
		==> CMake GUI에서 아래의 항목을 적절히 설정해야 함.
				MATLAB -> ${MATLAB_HOME} (???)
				MEXEXT -> mexw32 / mexw64 (Windows), mexglx / mexa64 (Linux) (???)
					이 항목을 값을 변경해도 실제 적용이 되지 않는 듯함.
				MATLAB_INCLUDE_DIR
				MATLAB_LIBRARY_DIR
	- boost::get 관련 오류 발생.
		==> MSVC에서 제공하는 get과 충돌하는 문제인 듯함.
			아래와 같이 수정.
			<before>
			get(m_time_map, current_vertex)
			<after>
			boost::get(m_time_map, current_vertex)
	- libDAI library와 관계된 project building 시에 아래와 같은 오류 발생.
		Cannot open include file: 'tr1/unordered_map': No such file or directory
		==> Because WINDOWS macro is not defined.
			_WINDOWS macro is already defined.
			<before>
			#if defined(WINDOWS)
			<after>
			#if defined(WINDOWS) || defined(_WINDOWS)
	- OpenGM library가 사용하는 external library와 관련하여 _ITERATOR_DEBUG_LEVEL 오류 발생.
		<error>
			mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2'
		libDAI library
		external MRF library
		==> OpenGM library가 linking하는 external library의 build mode가 달라서 발생.
			release build (libdai.lib) or debug build (libdai_d.lib)가 일치하도록 linking library을 설정해야 함.
			release build (external-library-mrf.lib) or debug build (external-library-mrf.lib)가 일치하도록 linking library을 설정해야 함.
				release build: ${OPENGM_HOME}/build_msvc10/src/external/Release
				debug build: ${OPENGM_HOME}/build_msvc10/src/external/Debug
	- __mpz_struct와 관계된 ostream 오류 발생.
		unresolved external symbol "__declspec(dllimport) class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,struct __mpz_struct const *)"
		==> GMP library와의 linking에서 문제가 있는 듯함.
			GMP library 대신에 MPIR library를 사용해 해결.
			MPIR library는 GMP library를 포함하고 있음.
			MPIR library를 Windows 환경에서 building 가능.
	- Matlab mex와 관련된 오류 발생.
		invalid numeric argument '/Wl,--version-script,/server/opt/matlab/mexFunction.map'
		==> opengmBuild.mexa64는 64bit Linux용 mex file인 듯함.
			Matlab에서 OpenGM을 사용하지 않는다면 무시해도 됨.
		==> 오류를 없애고자 한다면 C/C++ compiler option의 Command Line options에서 해당 설정을 삭제.
	- Class template & function template에서 원인이 불분명한 오류 발생.
		<error>
			use of undefined type 'opengm::meta::GetIndexInTypeList<TL,TypeToFindx>'
				at line 592 in opengm\utilities\metaprogramming.hxx
			cannot convert parameter 1 from 'const ExplicitFunction' to 'opengm::ExplicitFunction<T> &&'
				at line 597 in opengm\graphicalmodel\graphicalmodel.hxx
		==> 사용하는 graphical model, space, function 등에 사용되는 type (e.g.: float, double, etc)이 상이해서 발생.

[-] Trouble shooting (GCC).
	- Unexplained errors occurred in class templates & function templates.
		<error>
			incomplete type 'opengm::meta::GetIndexInTypeList<opengm::meta::ListEnd, opengm::ExplicitFunction<float> >' used in nested name specifier
				at line 591 in /usr/local/include/opengm/utilities/metaprogramming.hxx
			no matching function for call to 'std::vector<opengm::ExplicitFunction<double, long unsigned int, long unsigned int>, std::allocator<opengm::ExplicitFunction<double, long unsigned int, long unsigned int> > >::push_back(const opengm::ExplicitFunction<float>&)'
				at line 597 in /usr/local/include/opengm/graphicalmodel/graphicalmodel.hxx
		==> Because data types (e.g.: float, double, etc) used in graphical models, spaces, and function, etc are different.
