<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="machine_learning" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="../../bin/machine_learning_d" prefix_auto="1" extension_auto="1" />
				<Option working_dir="../../bin/" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
			</Target>
			<Target title="Release">
				<Option output="../../bin/machine_learning" prefix_auto="1" extension_auto="1" />
				<Option working_dir="../../bin/" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-std=c++11" />
			<Add option="-fexceptions" />
			<Add option="-fpermissive" />
			<Add option="-std=gnu++11" />
			<Add directory="./mfa_lib" />
			<Add directory="./kmeanspp_lib" />
			<Add directory="/usr/local/include/rl" />
			<Add directory="/usr/local/include" />
			<Add directory="/usr/include/eigen3" />
		</Compiler>
		<Linker>
			<Add library="gp" />
			<Add library="GClasses" />
			<Add library="caffe" />
			<Add library="shogun" />
			<Add library="nlopt" />
			<Add library="opencv_imgproc" />
			<Add library="opencv_imgcodecs" />
			<Add library="opencv_highgui" />
			<Add library="opencv_core" />
			<Add library="glog" />
			<Add library="boost_timer" />
			<Add library="boost_system" />
			<Add library="gsl" />
			<Add library="cblas" />
			<Add library="lapack" />
			<Add library="blas" />
			<Add library="pthread" />
			<Add directory="/usr/lib/atlas-base/atlas" />
			<Add directory="/usr/local/lib" />
		</Linker>
		<Unit filename="caffe/caffe_classification_example.cpp" />
		<Unit filename="caffe/caffe_main.cpp" />
		<Unit filename="clustering/clustering_k_medoids.cpp" />
		<Unit filename="clustering/clustering_kmeanspp.cpp" />
		<Unit filename="clustering/clustering_main.cpp" />
		<Unit filename="clustering/clustering_spectral_clustering.cpp" />
		<Unit filename="encog/encog_main.cpp" />
		<Unit filename="kmeanspp_lib/KMeans.cpp" />
		<Unit filename="kmeanspp_lib/KMeans.h" />
		<Unit filename="kmeanspp_lib/KmTree.cpp" />
		<Unit filename="kmeanspp_lib/KmTree.h" />
		<Unit filename="kmeanspp_lib/KmUtils.cpp" />
		<Unit filename="kmeanspp_lib/KmUtils.h" />
		<Unit filename="libgp/libgp_main.cpp" />
		<Unit filename="liblearning/liblearning_deep_learning_example.cpp" />
		<Unit filename="liblearning/liblearning_main.cpp" />
		<Unit filename="library_autolinking.cpp" />
		<Unit filename="libsvm/libsvm_main.cpp" />
		<Unit filename="libsvm/libsvm_predict_example.cpp" />
		<Unit filename="libsvm/libsvm_train_example.cpp" />
		<Unit filename="libsvm_lib/svm-predict.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="libsvm_lib/svm-scale.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="libsvm_lib/svm-train.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="libsvm_lib/svm.cpp" />
		<Unit filename="libsvm_lib/svm.h" />
		<Unit filename="main.cpp" />
		<Unit filename="manifold_learning/locally_linear_coordination.cpp" />
		<Unit filename="manifold_learning/manifold_alignment_main.cpp" />
		<Unit filename="manifold_learning/manifold_learning_main.cpp" />
		<Unit filename="mfa_lib/log.hpp" />
		<Unit filename="mfa_lib/mfa.cpp" />
		<Unit filename="mfa_lib/mfa.hpp" />
		<Unit filename="multiboost/multiboost_main.cpp" />
		<Unit filename="mysvm/mysvm_learn_example.cpp" />
		<Unit filename="mysvm/mysvm_main.cpp" />
		<Unit filename="mysvm/mysvm_predict_example.cpp" />
		<Unit filename="mysvm_lib/example_set.cpp" />
		<Unit filename="mysvm_lib/example_set.h" />
		<Unit filename="mysvm_lib/globals.cpp" />
		<Unit filename="mysvm_lib/globals.h" />
		<Unit filename="mysvm_lib/kernel.cpp" />
		<Unit filename="mysvm_lib/kernel.h" />
		<Unit filename="mysvm_lib/learn.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="mysvm_lib/parameters.cpp" />
		<Unit filename="mysvm_lib/parameters.h" />
		<Unit filename="mysvm_lib/predict.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="mysvm_lib/smo.cpp" />
		<Unit filename="mysvm_lib/smo.h" />
		<Unit filename="mysvm_lib/svm_c.cpp" />
		<Unit filename="mysvm_lib/svm_c.h" />
		<Unit filename="mysvm_lib/svm_nu.cpp" />
		<Unit filename="mysvm_lib/svm_nu.h" />
		<Unit filename="mysvm_lib/version.h" />
		<Unit filename="rl_glue/rl_glue_main.cpp" />
		<Unit filename="rllib/rllib_boyan_chain_lstd_example.cpp" />
		<Unit filename="rllib/rllib_cliff_walking_qlearning_example.cpp" />
		<Unit filename="rllib/rllib_cliff_walking_sarsa_example.cpp" />
		<Unit filename="rllib/rllib_inverted_pendulum_ktdq_example.cpp" />
		<Unit filename="rllib/rllib_inverted_pendulum_lspi_example.cpp" />
		<Unit filename="rllib/rllib_inverted_pendulum_mlp_ktdq_example.cpp" />
		<Unit filename="rllib/rllib_main.cpp" />
		<Unit filename="rllib/rllib_mountain_car_ktdsarsa_example.cpp" />
		<Unit filename="rnnlib/rnnlib_main.cpp" />
		<Unit filename="rnnlib_lib/ActivationFunctions.hpp" />
		<Unit filename="rnnlib_lib/Agg.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="rnnlib_lib/BiasLayer.hpp" />
		<Unit filename="rnnlib_lib/BivariateNorm.cpp" />
		<Unit filename="rnnlib_lib/BivariateNorm.h" />
		<Unit filename="rnnlib_lib/BlockLayer.hpp" />
		<Unit filename="rnnlib_lib/CharWindowLayer.hpp" />
		<Unit filename="rnnlib_lib/ClassificationLayer.hpp" />
		<Unit filename="rnnlib_lib/CollapseLayer.hpp" />
		<Unit filename="rnnlib_lib/ConfigFile.hpp" />
		<Unit filename="rnnlib_lib/Connection.hpp" />
		<Unit filename="rnnlib_lib/Container.hpp" />
		<Unit filename="rnnlib_lib/CopyConnection.hpp" />
		<Unit filename="rnnlib_lib/DataExporter.cpp" />
		<Unit filename="rnnlib_lib/DataExporter.hpp" />
		<Unit filename="rnnlib_lib/DataSequence.hpp" />
		<Unit filename="rnnlib_lib/DatasetErrors.hpp" />
		<Unit filename="rnnlib_lib/FullConnection.hpp" />
		<Unit filename="rnnlib_lib/GatherLayer.hpp" />
		<Unit filename="rnnlib_lib/GradientCheck.hpp" />
		<Unit filename="rnnlib_lib/Helpers.hpp" />
		<Unit filename="rnnlib_lib/IdentityLayer.hpp" />
		<Unit filename="rnnlib_lib/InputHiddenConnection.hpp" />
		<Unit filename="rnnlib_lib/InputLayer.hpp" />
		<Unit filename="rnnlib_lib/Layer.hpp" />
		<Unit filename="rnnlib_lib/Log.cpp" />
		<Unit filename="rnnlib_lib/Log.hpp" />
		<Unit filename="rnnlib_lib/Lstm1dLayer.hpp" />
		<Unit filename="rnnlib_lib/LstmLayer.hpp" />
		<Unit filename="rnnlib_lib/Main.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="rnnlib_lib/Matrix.hpp" />
		<Unit filename="rnnlib_lib/Mdrnn.hpp" />
		<Unit filename="rnnlib_lib/MixtureOutputLayer.hpp" />
		<Unit filename="rnnlib_lib/MultiArray.hpp" />
		<Unit filename="rnnlib_lib/MultilayerNet.hpp" />
		<Unit filename="rnnlib_lib/Named.hpp" />
		<Unit filename="rnnlib_lib/NetcdfDataset.hpp" />
		<Unit filename="rnnlib_lib/NetworkOutput.hpp" />
		<Unit filename="rnnlib_lib/NeuronLayer.hpp" />
		<Unit filename="rnnlib_lib/Optimiser.hpp" />
		<Unit filename="rnnlib_lib/Random.cpp" />
		<Unit filename="rnnlib_lib/Random.hpp" />
		<Unit filename="rnnlib_lib/Rmsprop.hpp" />
		<Unit filename="rnnlib_lib/Rprop.hpp" />
		<Unit filename="rnnlib_lib/SeqBuffer.hpp" />
		<Unit filename="rnnlib_lib/SoftmaxLayer.hpp" />
		<Unit filename="rnnlib_lib/SteepestDescent.hpp" />
		<Unit filename="rnnlib_lib/String.hpp" />
		<Unit filename="rnnlib_lib/StringAlignment.hpp" />
		<Unit filename="rnnlib_lib/Synth.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="rnnlib_lib/Trainer.hpp" />
		<Unit filename="rnnlib_lib/TranscriptionLayer.hpp" />
		<Unit filename="rnnlib_lib/Val.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="rnnlib_lib/VerticalNet.hpp" />
		<Unit filename="rnnlib_lib/WeightContainer.hpp" />
		<Unit filename="rnnlib_lib/fromstd.hpp" />
		<Unit filename="shogun/shogun_classifier_conjugateindex_example.cpp" />
		<Unit filename="shogun/shogun_classifier_latent_svm_example.cpp" />
		<Unit filename="shogun/shogun_classifier_libsvm_example.cpp" />
		<Unit filename="shogun/shogun_classifier_minimal_svm_example.cpp" />
		<Unit filename="shogun/shogun_classifier_mklmulticlass_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclass_ecoc_discriminant_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclass_ecoc_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclass_ecoc_random_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclass_shareboost_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclasslibsvm_example.cpp" />
		<Unit filename="shogun/shogun_classifier_multiclasslinearmachine_example.cpp" />
		<Unit filename="shogun/shogun_clustering_kmeans_example.cpp" />
		<Unit filename="shogun/shogun_converter_diffusionmaps_example.cpp" />
		<Unit filename="shogun/shogun_converter_factoranalysis_example.cpp" />
		<Unit filename="shogun/shogun_converter_hessianlocallylinearembedding_example.cpp" />
		<Unit filename="shogun/shogun_converter_isomap_example.cpp" />
		<Unit filename="shogun/shogun_converter_kernellocallylinearembedding_example.cpp" />
		<Unit filename="shogun/shogun_converter_laplacianeigenmaps_example.cpp" />
		<Unit filename="shogun/shogun_converter_linearlocaltangentspacealignment_example.cpp" />
		<Unit filename="shogun/shogun_converter_localitypreservingprojections_example.cpp" />
		<Unit filename="shogun/shogun_converter_locallylinearembedding_example.cpp" />
		<Unit filename="shogun/shogun_converter_localtangentspacealignment_example.cpp" />
		<Unit filename="shogun/shogun_converter_multidimensionalscaling_example.cpp" />
		<Unit filename="shogun/shogun_converter_neighborhoodpreservingembedding_example.cpp" />
		<Unit filename="shogun/shogun_converter_stochasticproximityembedding_example.cpp" />
		<Unit filename="shogun/shogun_evaluation_cross_validation_classification_example.cpp" />
		<Unit filename="shogun/shogun_evaluation_cross_validation_mkl_weight_storage_example.cpp" />
		<Unit filename="shogun/shogun_evaluation_cross_validation_multiclass_example.cpp" />
		<Unit filename="shogun/shogun_evaluation_cross_validation_multiclass_mkl_example.cpp" />
		<Unit filename="shogun/shogun_evaluation_cross_validation_regression_example.cpp" />
		<Unit filename="shogun/shogun_main.cpp" />
		<Unit filename="shogun/shogun_modelselection_apply_parameter_tree_example.cpp" />
		<Unit filename="shogun/shogun_modelselection_grid_search_kernel_example.cpp" />
		<Unit filename="shogun/shogun_modelselection_grid_search_krr_example.cpp" />
		<Unit filename="shogun/shogun_modelselection_grid_search_linear_example.cpp" />
		<Unit filename="shogun/shogun_modelselection_grid_search_mkl_example.cpp" />
		<Unit filename="shogun/shogun_modelselection_grid_search_multiclass_svm_example.cpp" />
		<Unit filename="shogun/shogun_regression_gaussian_process_ard_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_fitc_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_gaussian_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_laplace_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_product_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_simple_exact_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="shogun/shogun_regression_gaussian_process_sum_example.cpp">
			<Option compile="0" />
			<Option link="0" />
		</Unit>
		<Unit filename="svm_light/svm_light_main.cpp" />
		<Unit filename="tiny_dnn/tiny_dnn_basic_example.cpp" />
		<Unit filename="tiny_dnn/tiny_dnn_cifar10_example.cpp" />
		<Unit filename="tiny_dnn/tiny_dnn_main.cpp" />
		<Unit filename="tiny_dnn/tiny_dnn_mnist_example.cpp" />
		<Unit filename="torch/torch_deep_learning_example.cpp" />
		<Unit filename="torch/torch_main.cpp" />
		<Unit filename="waffles/waffles_main.cpp" />
		<Unit filename="waffles/waffles_manifold_example.cpp" />
		<Unit filename="waffles/waffles_ml_example.cpp" />
		<Extensions>
			<code_completion />
			<debugger />
			<envvars />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
