// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PartConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PartConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PartDef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartDef_reflection_ = NULL;
const ::google::protobuf::Descriptor* Joint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Joint_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppearanceGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppearanceGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* PartConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PartConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PartConfig_2eproto() {
  protobuf_AddDesc_PartConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PartConfig.proto");
  GOOGLE_CHECK(file != NULL);
  PartDef_descriptor_ = file->message_type(0);
  static const int PartDef_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, part_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, part_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, part_x_axis_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, part_x_axis_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, part_x_axis_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, ext_x_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, ext_x_neg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, ext_y_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, ext_y_neg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, is_root_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, is_detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, is_upright_),
  };
  PartDef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartDef_descriptor_,
      PartDef::internal_default_instance(),
      PartDef_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, _has_bits_),
      -1,
      -1,
      sizeof(PartDef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartDef, _internal_metadata_));
  Joint_descriptor_ = file->message_type(1);
  static const int Joint_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, child_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, parent_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, joint_pos_),
  };
  Joint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Joint_descriptor_,
      Joint::internal_default_instance(),
      Joint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, _has_bits_),
      -1,
      -1,
      sizeof(Joint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Joint, _internal_metadata_));
  AppearanceGroup_descriptor_ = file->message_type(2);
  static const int AppearanceGroup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppearanceGroup, part_id_),
  };
  AppearanceGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppearanceGroup_descriptor_,
      AppearanceGroup::internal_default_instance(),
      AppearanceGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppearanceGroup, _has_bits_),
      -1,
      -1,
      sizeof(AppearanceGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppearanceGroup, _internal_metadata_));
  PartConfig_descriptor_ = file->message_type(3);
  static const int PartConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartConfig, part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartConfig, joint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartConfig, app_group_),
  };
  PartConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartConfig_descriptor_,
      PartConfig::internal_default_instance(),
      PartConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartConfig, _has_bits_),
      -1,
      -1,
      sizeof(PartConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartConfig, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PartConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartDef_descriptor_, PartDef::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Joint_descriptor_, Joint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppearanceGroup_descriptor_, AppearanceGroup::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartConfig_descriptor_, PartConfig::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PartConfig_2eproto() {
  PartDef_default_instance_.Shutdown();
  delete PartDef_reflection_;
  Joint_default_instance_.Shutdown();
  delete Joint_reflection_;
  delete Joint::_default_type_;
  AppearanceGroup_default_instance_.Shutdown();
  delete AppearanceGroup_reflection_;
  PartConfig_default_instance_.Shutdown();
  delete PartConfig_reflection_;
}

void protobuf_InitDefaults_PartConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  PartDef_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Joint::_default_type_ =
      new ::std::string("Gaussian", 8);
  Joint_default_instance_.DefaultConstruct();
  AppearanceGroup_default_instance_.DefaultConstruct();
  PartConfig_default_instance_.DefaultConstruct();
  PartDef_default_instance_.get_mutable()->InitAsDefaultInstance();
  Joint_default_instance_.get_mutable()->InitAsDefaultInstance();
  AppearanceGroup_default_instance_.get_mutable()->InitAsDefaultInstance();
  PartConfig_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PartConfig_2eproto_once_);
void protobuf_InitDefaults_PartConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PartConfig_2eproto_once_,
                 &protobuf_InitDefaults_PartConfig_2eproto_impl);
}
void protobuf_AddDesc_PartConfig_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PartConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020PartConfig.proto\"\241\002\n\007PartDef\022\017\n\007part_i"
    "d\030\001 \001(\005\022\020\n\010part_pos\030\002 \003(\005\022\030\n\020part_x_axis"
    "_from\030\004 \001(\005\022\026\n\016part_x_axis_to\030\005 \001(\005\022\035\n\022p"
    "art_x_axis_offset\030\006 \001(\002:\0010\022\024\n\text_x_pos\030"
    "\007 \001(\002:\0010\022\024\n\text_x_neg\030\010 \001(\002:\0010\022\024\n\text_y_"
    "pos\030\t \001(\002:\0010\022\024\n\text_y_neg\030\n \001(\002:\0010\022\026\n\007is"
    "_root\030\013 \001(\010:\005false\022\027\n\tis_detect\030\014 \001(\010:\004t"
    "rue\022\031\n\nis_upright\030\r \001(\010:\005false\"Y\n\005Joint\022"
    "\021\n\tchild_idx\030\001 \001(\005\022\022\n\nparent_idx\030\002 \001(\005\022\026"
    "\n\004type\030\003 \001(\t:\010Gaussian\022\021\n\tjoint_pos\030\004 \003("
    "\005\"\"\n\017AppearanceGroup\022\017\n\007part_id\030\001 \003(\005\"`\n"
    "\nPartConfig\022\026\n\004part\030\001 \003(\0132\010.PartDef\022\025\n\005j"
    "oint\030\002 \003(\0132\006.Joint\022#\n\tapp_group\030\003 \003(\0132\020."
    "AppearanceGroup", 535);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PartConfig.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PartConfig_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PartConfig_2eproto_once_);
void protobuf_AddDesc_PartConfig_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PartConfig_2eproto_once_,
                 &protobuf_AddDesc_PartConfig_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PartConfig_2eproto {
  StaticDescriptorInitializer_PartConfig_2eproto() {
    protobuf_AddDesc_PartConfig_2eproto();
  }
} static_descriptor_initializer_PartConfig_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartDef::kPartIdFieldNumber;
const int PartDef::kPartPosFieldNumber;
const int PartDef::kPartXAxisFromFieldNumber;
const int PartDef::kPartXAxisToFieldNumber;
const int PartDef::kPartXAxisOffsetFieldNumber;
const int PartDef::kExtXPosFieldNumber;
const int PartDef::kExtXNegFieldNumber;
const int PartDef::kExtYPosFieldNumber;
const int PartDef::kExtYNegFieldNumber;
const int PartDef::kIsRootFieldNumber;
const int PartDef::kIsDetectFieldNumber;
const int PartDef::kIsUprightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartDef::PartDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PartDef)
}

void PartDef::InitAsDefaultInstance() {
}

PartDef::PartDef(const PartDef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PartDef)
}

void PartDef::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&part_id_, 0, reinterpret_cast<char*>(&is_upright_) -
    reinterpret_cast<char*>(&part_id_) + sizeof(is_upright_));
  is_detect_ = true;
}

PartDef::~PartDef() {
  // @@protoc_insertion_point(destructor:PartDef)
  SharedDtor();
}

void PartDef::SharedDtor() {
}

void PartDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartDef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartDef_descriptor_;
}

const PartDef& PartDef::default_instance() {
  protobuf_InitDefaults_PartConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PartDef> PartDef_default_instance_;

PartDef* PartDef::New(::google::protobuf::Arena* arena) const {
  PartDef* n = new PartDef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartDef::Clear() {
// @@protoc_insertion_point(message_clear_start:PartDef)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PartDef, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PartDef*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(part_id_, ext_y_pos_);
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(ext_y_neg_, is_upright_);
    is_detect_ = true;
  }

#undef ZR_HELPER_
#undef ZR_

  part_pos_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PartDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PartDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 part_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_part_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_part_pos;
        break;
      }

      // repeated int32 part_pos = 2;
      case 2: {
        if (tag == 16) {
         parse_part_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_part_pos())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_part_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_part_pos;
        if (input->ExpectTag(32)) goto parse_part_x_axis_from;
        break;
      }

      // optional int32 part_x_axis_from = 4;
      case 4: {
        if (tag == 32) {
         parse_part_x_axis_from:
          set_has_part_x_axis_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_x_axis_from_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_part_x_axis_to;
        break;
      }

      // optional int32 part_x_axis_to = 5;
      case 5: {
        if (tag == 40) {
         parse_part_x_axis_to:
          set_has_part_x_axis_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_x_axis_to_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_part_x_axis_offset;
        break;
      }

      // optional float part_x_axis_offset = 6 [default = 0];
      case 6: {
        if (tag == 53) {
         parse_part_x_axis_offset:
          set_has_part_x_axis_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &part_x_axis_offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_ext_x_pos;
        break;
      }

      // optional float ext_x_pos = 7 [default = 0];
      case 7: {
        if (tag == 61) {
         parse_ext_x_pos:
          set_has_ext_x_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ext_x_pos_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_ext_x_neg;
        break;
      }

      // optional float ext_x_neg = 8 [default = 0];
      case 8: {
        if (tag == 69) {
         parse_ext_x_neg:
          set_has_ext_x_neg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ext_x_neg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_ext_y_pos;
        break;
      }

      // optional float ext_y_pos = 9 [default = 0];
      case 9: {
        if (tag == 77) {
         parse_ext_y_pos:
          set_has_ext_y_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ext_y_pos_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_ext_y_neg;
        break;
      }

      // optional float ext_y_neg = 10 [default = 0];
      case 10: {
        if (tag == 85) {
         parse_ext_y_neg:
          set_has_ext_y_neg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ext_y_neg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_is_root;
        break;
      }

      // optional bool is_root = 11 [default = false];
      case 11: {
        if (tag == 88) {
         parse_is_root:
          set_has_is_root();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_root_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_is_detect;
        break;
      }

      // optional bool is_detect = 12 [default = true];
      case 12: {
        if (tag == 96) {
         parse_is_detect:
          set_has_is_detect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_detect_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_is_upright;
        break;
      }

      // optional bool is_upright = 13 [default = false];
      case 13: {
        if (tag == 104) {
         parse_is_upright:
          set_has_is_upright();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_upright_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PartDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PartDef)
  return false;
#undef DO_
}

void PartDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PartDef)
  // optional int32 part_id = 1;
  if (has_part_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->part_id(), output);
  }

  // repeated int32 part_pos = 2;
  for (int i = 0; i < this->part_pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->part_pos(i), output);
  }

  // optional int32 part_x_axis_from = 4;
  if (has_part_x_axis_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->part_x_axis_from(), output);
  }

  // optional int32 part_x_axis_to = 5;
  if (has_part_x_axis_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->part_x_axis_to(), output);
  }

  // optional float part_x_axis_offset = 6 [default = 0];
  if (has_part_x_axis_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->part_x_axis_offset(), output);
  }

  // optional float ext_x_pos = 7 [default = 0];
  if (has_ext_x_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->ext_x_pos(), output);
  }

  // optional float ext_x_neg = 8 [default = 0];
  if (has_ext_x_neg()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->ext_x_neg(), output);
  }

  // optional float ext_y_pos = 9 [default = 0];
  if (has_ext_y_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ext_y_pos(), output);
  }

  // optional float ext_y_neg = 10 [default = 0];
  if (has_ext_y_neg()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->ext_y_neg(), output);
  }

  // optional bool is_root = 11 [default = false];
  if (has_is_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_root(), output);
  }

  // optional bool is_detect = 12 [default = true];
  if (has_is_detect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_detect(), output);
  }

  // optional bool is_upright = 13 [default = false];
  if (has_is_upright()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_upright(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PartDef)
}

::google::protobuf::uint8* PartDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PartDef)
  // optional int32 part_id = 1;
  if (has_part_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->part_id(), target);
  }

  // repeated int32 part_pos = 2;
  for (int i = 0; i < this->part_pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->part_pos(i), target);
  }

  // optional int32 part_x_axis_from = 4;
  if (has_part_x_axis_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->part_x_axis_from(), target);
  }

  // optional int32 part_x_axis_to = 5;
  if (has_part_x_axis_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->part_x_axis_to(), target);
  }

  // optional float part_x_axis_offset = 6 [default = 0];
  if (has_part_x_axis_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->part_x_axis_offset(), target);
  }

  // optional float ext_x_pos = 7 [default = 0];
  if (has_ext_x_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->ext_x_pos(), target);
  }

  // optional float ext_x_neg = 8 [default = 0];
  if (has_ext_x_neg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->ext_x_neg(), target);
  }

  // optional float ext_y_pos = 9 [default = 0];
  if (has_ext_y_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ext_y_pos(), target);
  }

  // optional float ext_y_neg = 10 [default = 0];
  if (has_ext_y_neg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->ext_y_neg(), target);
  }

  // optional bool is_root = 11 [default = false];
  if (has_is_root()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_root(), target);
  }

  // optional bool is_detect = 12 [default = true];
  if (has_is_detect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_detect(), target);
  }

  // optional bool is_upright = 13 [default = false];
  if (has_is_upright()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_upright(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PartDef)
  return target;
}

size_t PartDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PartDef)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 253u) {
    // optional int32 part_id = 1;
    if (has_part_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part_id());
    }

    // optional int32 part_x_axis_from = 4;
    if (has_part_x_axis_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part_x_axis_from());
    }

    // optional int32 part_x_axis_to = 5;
    if (has_part_x_axis_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part_x_axis_to());
    }

    // optional float part_x_axis_offset = 6 [default = 0];
    if (has_part_x_axis_offset()) {
      total_size += 1 + 4;
    }

    // optional float ext_x_pos = 7 [default = 0];
    if (has_ext_x_pos()) {
      total_size += 1 + 4;
    }

    // optional float ext_x_neg = 8 [default = 0];
    if (has_ext_x_neg()) {
      total_size += 1 + 4;
    }

    // optional float ext_y_pos = 9 [default = 0];
    if (has_ext_y_pos()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional float ext_y_neg = 10 [default = 0];
    if (has_ext_y_neg()) {
      total_size += 1 + 4;
    }

    // optional bool is_root = 11 [default = false];
    if (has_is_root()) {
      total_size += 1 + 1;
    }

    // optional bool is_detect = 12 [default = true];
    if (has_is_detect()) {
      total_size += 1 + 1;
    }

    // optional bool is_upright = 13 [default = false];
    if (has_is_upright()) {
      total_size += 1 + 1;
    }

  }
  // repeated int32 part_pos = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->part_pos_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->part_pos(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->part_pos_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PartDef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PartDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PartDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PartDef)
    UnsafeMergeFrom(*source);
  }
}

void PartDef::MergeFrom(const PartDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PartDef)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PartDef::UnsafeMergeFrom(const PartDef& from) {
  GOOGLE_DCHECK(&from != this);
  part_pos_.UnsafeMergeFrom(from.part_pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_part_id()) {
      set_part_id(from.part_id());
    }
    if (from.has_part_x_axis_from()) {
      set_part_x_axis_from(from.part_x_axis_from());
    }
    if (from.has_part_x_axis_to()) {
      set_part_x_axis_to(from.part_x_axis_to());
    }
    if (from.has_part_x_axis_offset()) {
      set_part_x_axis_offset(from.part_x_axis_offset());
    }
    if (from.has_ext_x_pos()) {
      set_ext_x_pos(from.ext_x_pos());
    }
    if (from.has_ext_x_neg()) {
      set_ext_x_neg(from.ext_x_neg());
    }
    if (from.has_ext_y_pos()) {
      set_ext_y_pos(from.ext_y_pos());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ext_y_neg()) {
      set_ext_y_neg(from.ext_y_neg());
    }
    if (from.has_is_root()) {
      set_is_root(from.is_root());
    }
    if (from.has_is_detect()) {
      set_is_detect(from.is_detect());
    }
    if (from.has_is_upright()) {
      set_is_upright(from.is_upright());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PartDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PartDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartDef::CopyFrom(const PartDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PartDef)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PartDef::IsInitialized() const {

  return true;
}

void PartDef::Swap(PartDef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartDef::InternalSwap(PartDef* other) {
  std::swap(part_id_, other->part_id_);
  part_pos_.UnsafeArenaSwap(&other->part_pos_);
  std::swap(part_x_axis_from_, other->part_x_axis_from_);
  std::swap(part_x_axis_to_, other->part_x_axis_to_);
  std::swap(part_x_axis_offset_, other->part_x_axis_offset_);
  std::swap(ext_x_pos_, other->ext_x_pos_);
  std::swap(ext_x_neg_, other->ext_x_neg_);
  std::swap(ext_y_pos_, other->ext_y_pos_);
  std::swap(ext_y_neg_, other->ext_y_neg_);
  std::swap(is_root_, other->is_root_);
  std::swap(is_detect_, other->is_detect_);
  std::swap(is_upright_, other->is_upright_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartDef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartDef_descriptor_;
  metadata.reflection = PartDef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartDef

// optional int32 part_id = 1;
bool PartDef::has_part_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PartDef::set_has_part_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PartDef::clear_has_part_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PartDef::clear_part_id() {
  part_id_ = 0;
  clear_has_part_id();
}
::google::protobuf::int32 PartDef::part_id() const {
  // @@protoc_insertion_point(field_get:PartDef.part_id)
  return part_id_;
}
void PartDef::set_part_id(::google::protobuf::int32 value) {
  set_has_part_id();
  part_id_ = value;
  // @@protoc_insertion_point(field_set:PartDef.part_id)
}

// repeated int32 part_pos = 2;
int PartDef::part_pos_size() const {
  return part_pos_.size();
}
void PartDef::clear_part_pos() {
  part_pos_.Clear();
}
::google::protobuf::int32 PartDef::part_pos(int index) const {
  // @@protoc_insertion_point(field_get:PartDef.part_pos)
  return part_pos_.Get(index);
}
void PartDef::set_part_pos(int index, ::google::protobuf::int32 value) {
  part_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:PartDef.part_pos)
}
void PartDef::add_part_pos(::google::protobuf::int32 value) {
  part_pos_.Add(value);
  // @@protoc_insertion_point(field_add:PartDef.part_pos)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PartDef::part_pos() const {
  // @@protoc_insertion_point(field_list:PartDef.part_pos)
  return part_pos_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PartDef::mutable_part_pos() {
  // @@protoc_insertion_point(field_mutable_list:PartDef.part_pos)
  return &part_pos_;
}

// optional int32 part_x_axis_from = 4;
bool PartDef::has_part_x_axis_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PartDef::set_has_part_x_axis_from() {
  _has_bits_[0] |= 0x00000004u;
}
void PartDef::clear_has_part_x_axis_from() {
  _has_bits_[0] &= ~0x00000004u;
}
void PartDef::clear_part_x_axis_from() {
  part_x_axis_from_ = 0;
  clear_has_part_x_axis_from();
}
::google::protobuf::int32 PartDef::part_x_axis_from() const {
  // @@protoc_insertion_point(field_get:PartDef.part_x_axis_from)
  return part_x_axis_from_;
}
void PartDef::set_part_x_axis_from(::google::protobuf::int32 value) {
  set_has_part_x_axis_from();
  part_x_axis_from_ = value;
  // @@protoc_insertion_point(field_set:PartDef.part_x_axis_from)
}

// optional int32 part_x_axis_to = 5;
bool PartDef::has_part_x_axis_to() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PartDef::set_has_part_x_axis_to() {
  _has_bits_[0] |= 0x00000008u;
}
void PartDef::clear_has_part_x_axis_to() {
  _has_bits_[0] &= ~0x00000008u;
}
void PartDef::clear_part_x_axis_to() {
  part_x_axis_to_ = 0;
  clear_has_part_x_axis_to();
}
::google::protobuf::int32 PartDef::part_x_axis_to() const {
  // @@protoc_insertion_point(field_get:PartDef.part_x_axis_to)
  return part_x_axis_to_;
}
void PartDef::set_part_x_axis_to(::google::protobuf::int32 value) {
  set_has_part_x_axis_to();
  part_x_axis_to_ = value;
  // @@protoc_insertion_point(field_set:PartDef.part_x_axis_to)
}

// optional float part_x_axis_offset = 6 [default = 0];
bool PartDef::has_part_x_axis_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PartDef::set_has_part_x_axis_offset() {
  _has_bits_[0] |= 0x00000010u;
}
void PartDef::clear_has_part_x_axis_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
void PartDef::clear_part_x_axis_offset() {
  part_x_axis_offset_ = 0;
  clear_has_part_x_axis_offset();
}
float PartDef::part_x_axis_offset() const {
  // @@protoc_insertion_point(field_get:PartDef.part_x_axis_offset)
  return part_x_axis_offset_;
}
void PartDef::set_part_x_axis_offset(float value) {
  set_has_part_x_axis_offset();
  part_x_axis_offset_ = value;
  // @@protoc_insertion_point(field_set:PartDef.part_x_axis_offset)
}

// optional float ext_x_pos = 7 [default = 0];
bool PartDef::has_ext_x_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PartDef::set_has_ext_x_pos() {
  _has_bits_[0] |= 0x00000020u;
}
void PartDef::clear_has_ext_x_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
void PartDef::clear_ext_x_pos() {
  ext_x_pos_ = 0;
  clear_has_ext_x_pos();
}
float PartDef::ext_x_pos() const {
  // @@protoc_insertion_point(field_get:PartDef.ext_x_pos)
  return ext_x_pos_;
}
void PartDef::set_ext_x_pos(float value) {
  set_has_ext_x_pos();
  ext_x_pos_ = value;
  // @@protoc_insertion_point(field_set:PartDef.ext_x_pos)
}

// optional float ext_x_neg = 8 [default = 0];
bool PartDef::has_ext_x_neg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PartDef::set_has_ext_x_neg() {
  _has_bits_[0] |= 0x00000040u;
}
void PartDef::clear_has_ext_x_neg() {
  _has_bits_[0] &= ~0x00000040u;
}
void PartDef::clear_ext_x_neg() {
  ext_x_neg_ = 0;
  clear_has_ext_x_neg();
}
float PartDef::ext_x_neg() const {
  // @@protoc_insertion_point(field_get:PartDef.ext_x_neg)
  return ext_x_neg_;
}
void PartDef::set_ext_x_neg(float value) {
  set_has_ext_x_neg();
  ext_x_neg_ = value;
  // @@protoc_insertion_point(field_set:PartDef.ext_x_neg)
}

// optional float ext_y_pos = 9 [default = 0];
bool PartDef::has_ext_y_pos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PartDef::set_has_ext_y_pos() {
  _has_bits_[0] |= 0x00000080u;
}
void PartDef::clear_has_ext_y_pos() {
  _has_bits_[0] &= ~0x00000080u;
}
void PartDef::clear_ext_y_pos() {
  ext_y_pos_ = 0;
  clear_has_ext_y_pos();
}
float PartDef::ext_y_pos() const {
  // @@protoc_insertion_point(field_get:PartDef.ext_y_pos)
  return ext_y_pos_;
}
void PartDef::set_ext_y_pos(float value) {
  set_has_ext_y_pos();
  ext_y_pos_ = value;
  // @@protoc_insertion_point(field_set:PartDef.ext_y_pos)
}

// optional float ext_y_neg = 10 [default = 0];
bool PartDef::has_ext_y_neg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PartDef::set_has_ext_y_neg() {
  _has_bits_[0] |= 0x00000100u;
}
void PartDef::clear_has_ext_y_neg() {
  _has_bits_[0] &= ~0x00000100u;
}
void PartDef::clear_ext_y_neg() {
  ext_y_neg_ = 0;
  clear_has_ext_y_neg();
}
float PartDef::ext_y_neg() const {
  // @@protoc_insertion_point(field_get:PartDef.ext_y_neg)
  return ext_y_neg_;
}
void PartDef::set_ext_y_neg(float value) {
  set_has_ext_y_neg();
  ext_y_neg_ = value;
  // @@protoc_insertion_point(field_set:PartDef.ext_y_neg)
}

// optional bool is_root = 11 [default = false];
bool PartDef::has_is_root() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PartDef::set_has_is_root() {
  _has_bits_[0] |= 0x00000200u;
}
void PartDef::clear_has_is_root() {
  _has_bits_[0] &= ~0x00000200u;
}
void PartDef::clear_is_root() {
  is_root_ = false;
  clear_has_is_root();
}
bool PartDef::is_root() const {
  // @@protoc_insertion_point(field_get:PartDef.is_root)
  return is_root_;
}
void PartDef::set_is_root(bool value) {
  set_has_is_root();
  is_root_ = value;
  // @@protoc_insertion_point(field_set:PartDef.is_root)
}

// optional bool is_detect = 12 [default = true];
bool PartDef::has_is_detect() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PartDef::set_has_is_detect() {
  _has_bits_[0] |= 0x00000400u;
}
void PartDef::clear_has_is_detect() {
  _has_bits_[0] &= ~0x00000400u;
}
void PartDef::clear_is_detect() {
  is_detect_ = true;
  clear_has_is_detect();
}
bool PartDef::is_detect() const {
  // @@protoc_insertion_point(field_get:PartDef.is_detect)
  return is_detect_;
}
void PartDef::set_is_detect(bool value) {
  set_has_is_detect();
  is_detect_ = value;
  // @@protoc_insertion_point(field_set:PartDef.is_detect)
}

// optional bool is_upright = 13 [default = false];
bool PartDef::has_is_upright() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PartDef::set_has_is_upright() {
  _has_bits_[0] |= 0x00000800u;
}
void PartDef::clear_has_is_upright() {
  _has_bits_[0] &= ~0x00000800u;
}
void PartDef::clear_is_upright() {
  is_upright_ = false;
  clear_has_is_upright();
}
bool PartDef::is_upright() const {
  // @@protoc_insertion_point(field_get:PartDef.is_upright)
  return is_upright_;
}
void PartDef::set_is_upright(bool value) {
  set_has_is_upright();
  is_upright_ = value;
  // @@protoc_insertion_point(field_set:PartDef.is_upright)
}

inline const PartDef* PartDef::internal_default_instance() {
  return &PartDef_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::std::string* Joint::_default_type_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Joint::kChildIdxFieldNumber;
const int Joint::kParentIdxFieldNumber;
const int Joint::kTypeFieldNumber;
const int Joint::kJointPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Joint::Joint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Joint)
}

void Joint::InitAsDefaultInstance() {
}

Joint::Joint(const Joint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Joint)
}

void Joint::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(_default_type_);
  ::memset(&child_idx_, 0, reinterpret_cast<char*>(&parent_idx_) -
    reinterpret_cast<char*>(&child_idx_) + sizeof(parent_idx_));
}

Joint::~Joint() {
  // @@protoc_insertion_point(destructor:Joint)
  SharedDtor();
}

void Joint::SharedDtor() {
  type_.DestroyNoArena(_default_type_);
}

void Joint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Joint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Joint_descriptor_;
}

const Joint& Joint::default_instance() {
  protobuf_InitDefaults_PartConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Joint> Joint_default_instance_;

Joint* Joint::New(::google::protobuf::Arena* arena) const {
  Joint* n = new Joint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Joint::Clear() {
// @@protoc_insertion_point(message_clear_start:Joint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Joint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Joint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(child_idx_, parent_idx_);
    if (has_type()) {
      type_.ClearToDefaultNoArena(_default_type_);
    }
  }

#undef ZR_HELPER_
#undef ZR_

  joint_pos_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Joint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Joint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 child_idx = 1;
      case 1: {
        if (tag == 8) {
          set_has_child_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &child_idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_parent_idx;
        break;
      }

      // optional int32 parent_idx = 2;
      case 2: {
        if (tag == 16) {
         parse_parent_idx:
          set_has_parent_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3 [default = "Gaussian"];
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Joint.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_joint_pos;
        break;
      }

      // repeated int32 joint_pos = 4;
      case 4: {
        if (tag == 32) {
         parse_joint_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_joint_pos())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_joint_pos())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_joint_pos;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Joint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Joint)
  return false;
#undef DO_
}

void Joint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Joint)
  // optional int32 child_idx = 1;
  if (has_child_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->child_idx(), output);
  }

  // optional int32 parent_idx = 2;
  if (has_parent_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parent_idx(), output);
  }

  // optional string type = 3 [default = "Gaussian"];
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Joint.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // repeated int32 joint_pos = 4;
  for (int i = 0; i < this->joint_pos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->joint_pos(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Joint)
}

::google::protobuf::uint8* Joint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Joint)
  // optional int32 child_idx = 1;
  if (has_child_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->child_idx(), target);
  }

  // optional int32 parent_idx = 2;
  if (has_parent_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parent_idx(), target);
  }

  // optional string type = 3 [default = "Gaussian"];
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Joint.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // repeated int32 joint_pos = 4;
  for (int i = 0; i < this->joint_pos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->joint_pos(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Joint)
  return target;
}

size_t Joint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Joint)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 child_idx = 1;
    if (has_child_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->child_idx());
    }

    // optional int32 parent_idx = 2;
    if (has_parent_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parent_idx());
    }

    // optional string type = 3 [default = "Gaussian"];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

  }
  // repeated int32 joint_pos = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->joint_pos_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->joint_pos(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->joint_pos_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Joint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Joint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Joint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Joint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Joint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Joint)
    UnsafeMergeFrom(*source);
  }
}

void Joint::MergeFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Joint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Joint::UnsafeMergeFrom(const Joint& from) {
  GOOGLE_DCHECK(&from != this);
  joint_pos_.UnsafeMergeFrom(from.joint_pos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_child_idx()) {
      set_child_idx(from.child_idx());
    }
    if (from.has_parent_idx()) {
      set_parent_idx(from.parent_idx());
    }
    if (from.has_type()) {
      set_has_type();
      type_.AssignWithDefault(_default_type_, from.type_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Joint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Joint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Joint::CopyFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Joint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Joint::IsInitialized() const {

  return true;
}

void Joint::Swap(Joint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Joint::InternalSwap(Joint* other) {
  std::swap(child_idx_, other->child_idx_);
  std::swap(parent_idx_, other->parent_idx_);
  type_.Swap(&other->type_);
  joint_pos_.UnsafeArenaSwap(&other->joint_pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Joint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Joint_descriptor_;
  metadata.reflection = Joint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Joint

// optional int32 child_idx = 1;
bool Joint::has_child_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Joint::set_has_child_idx() {
  _has_bits_[0] |= 0x00000001u;
}
void Joint::clear_has_child_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
void Joint::clear_child_idx() {
  child_idx_ = 0;
  clear_has_child_idx();
}
::google::protobuf::int32 Joint::child_idx() const {
  // @@protoc_insertion_point(field_get:Joint.child_idx)
  return child_idx_;
}
void Joint::set_child_idx(::google::protobuf::int32 value) {
  set_has_child_idx();
  child_idx_ = value;
  // @@protoc_insertion_point(field_set:Joint.child_idx)
}

// optional int32 parent_idx = 2;
bool Joint::has_parent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Joint::set_has_parent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
void Joint::clear_has_parent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
void Joint::clear_parent_idx() {
  parent_idx_ = 0;
  clear_has_parent_idx();
}
::google::protobuf::int32 Joint::parent_idx() const {
  // @@protoc_insertion_point(field_get:Joint.parent_idx)
  return parent_idx_;
}
void Joint::set_parent_idx(::google::protobuf::int32 value) {
  set_has_parent_idx();
  parent_idx_ = value;
  // @@protoc_insertion_point(field_set:Joint.parent_idx)
}

// optional string type = 3 [default = "Gaussian"];
bool Joint::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Joint::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void Joint::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void Joint::clear_type() {
  type_.ClearToDefaultNoArena(_default_type_);
  clear_has_type();
}
const ::std::string& Joint::type() const {
  // @@protoc_insertion_point(field_get:Joint.type)
  return type_.GetNoArena(_default_type_);
}
void Joint::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(_default_type_, value);
  // @@protoc_insertion_point(field_set:Joint.type)
}
void Joint::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(_default_type_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Joint.type)
}
void Joint::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(_default_type_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Joint.type)
}
::std::string* Joint::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:Joint.type)
  return type_.MutableNoArena(_default_type_);
}
::std::string* Joint::release_type() {
  // @@protoc_insertion_point(field_release:Joint.type)
  clear_has_type();
  return type_.ReleaseNoArena(_default_type_);
}
void Joint::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(_default_type_, type);
  // @@protoc_insertion_point(field_set_allocated:Joint.type)
}

// repeated int32 joint_pos = 4;
int Joint::joint_pos_size() const {
  return joint_pos_.size();
}
void Joint::clear_joint_pos() {
  joint_pos_.Clear();
}
::google::protobuf::int32 Joint::joint_pos(int index) const {
  // @@protoc_insertion_point(field_get:Joint.joint_pos)
  return joint_pos_.Get(index);
}
void Joint::set_joint_pos(int index, ::google::protobuf::int32 value) {
  joint_pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:Joint.joint_pos)
}
void Joint::add_joint_pos(::google::protobuf::int32 value) {
  joint_pos_.Add(value);
  // @@protoc_insertion_point(field_add:Joint.joint_pos)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Joint::joint_pos() const {
  // @@protoc_insertion_point(field_list:Joint.joint_pos)
  return joint_pos_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Joint::mutable_joint_pos() {
  // @@protoc_insertion_point(field_mutable_list:Joint.joint_pos)
  return &joint_pos_;
}

inline const Joint* Joint::internal_default_instance() {
  return &Joint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppearanceGroup::kPartIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppearanceGroup::AppearanceGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AppearanceGroup)
}

void AppearanceGroup::InitAsDefaultInstance() {
}

AppearanceGroup::AppearanceGroup(const AppearanceGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AppearanceGroup)
}

void AppearanceGroup::SharedCtor() {
  _cached_size_ = 0;
}

AppearanceGroup::~AppearanceGroup() {
  // @@protoc_insertion_point(destructor:AppearanceGroup)
  SharedDtor();
}

void AppearanceGroup::SharedDtor() {
}

void AppearanceGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppearanceGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppearanceGroup_descriptor_;
}

const AppearanceGroup& AppearanceGroup::default_instance() {
  protobuf_InitDefaults_PartConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppearanceGroup> AppearanceGroup_default_instance_;

AppearanceGroup* AppearanceGroup::New(::google::protobuf::Arena* arena) const {
  AppearanceGroup* n = new AppearanceGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppearanceGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:AppearanceGroup)
  part_id_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AppearanceGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AppearanceGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 part_id = 1;
      case 1: {
        if (tag == 8) {
         parse_part_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_part_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_part_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_part_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AppearanceGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AppearanceGroup)
  return false;
#undef DO_
}

void AppearanceGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AppearanceGroup)
  // repeated int32 part_id = 1;
  for (int i = 0; i < this->part_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->part_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AppearanceGroup)
}

::google::protobuf::uint8* AppearanceGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AppearanceGroup)
  // repeated int32 part_id = 1;
  for (int i = 0; i < this->part_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->part_id(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AppearanceGroup)
  return target;
}

size_t AppearanceGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AppearanceGroup)
  size_t total_size = 0;

  // repeated int32 part_id = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->part_id_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->part_id(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->part_id_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppearanceGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AppearanceGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppearanceGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppearanceGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AppearanceGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AppearanceGroup)
    UnsafeMergeFrom(*source);
  }
}

void AppearanceGroup::MergeFrom(const AppearanceGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AppearanceGroup)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AppearanceGroup::UnsafeMergeFrom(const AppearanceGroup& from) {
  GOOGLE_DCHECK(&from != this);
  part_id_.UnsafeMergeFrom(from.part_id_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AppearanceGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AppearanceGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppearanceGroup::CopyFrom(const AppearanceGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AppearanceGroup)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AppearanceGroup::IsInitialized() const {

  return true;
}

void AppearanceGroup::Swap(AppearanceGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppearanceGroup::InternalSwap(AppearanceGroup* other) {
  part_id_.UnsafeArenaSwap(&other->part_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppearanceGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppearanceGroup_descriptor_;
  metadata.reflection = AppearanceGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppearanceGroup

// repeated int32 part_id = 1;
int AppearanceGroup::part_id_size() const {
  return part_id_.size();
}
void AppearanceGroup::clear_part_id() {
  part_id_.Clear();
}
::google::protobuf::int32 AppearanceGroup::part_id(int index) const {
  // @@protoc_insertion_point(field_get:AppearanceGroup.part_id)
  return part_id_.Get(index);
}
void AppearanceGroup::set_part_id(int index, ::google::protobuf::int32 value) {
  part_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:AppearanceGroup.part_id)
}
void AppearanceGroup::add_part_id(::google::protobuf::int32 value) {
  part_id_.Add(value);
  // @@protoc_insertion_point(field_add:AppearanceGroup.part_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AppearanceGroup::part_id() const {
  // @@protoc_insertion_point(field_list:AppearanceGroup.part_id)
  return part_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AppearanceGroup::mutable_part_id() {
  // @@protoc_insertion_point(field_mutable_list:AppearanceGroup.part_id)
  return &part_id_;
}

inline const AppearanceGroup* AppearanceGroup::internal_default_instance() {
  return &AppearanceGroup_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartConfig::kPartFieldNumber;
const int PartConfig::kJointFieldNumber;
const int PartConfig::kAppGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartConfig::PartConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartConfig_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PartConfig)
}

void PartConfig::InitAsDefaultInstance() {
}

PartConfig::PartConfig(const PartConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PartConfig)
}

void PartConfig::SharedCtor() {
  _cached_size_ = 0;
}

PartConfig::~PartConfig() {
  // @@protoc_insertion_point(destructor:PartConfig)
  SharedDtor();
}

void PartConfig::SharedDtor() {
}

void PartConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartConfig_descriptor_;
}

const PartConfig& PartConfig::default_instance() {
  protobuf_InitDefaults_PartConfig_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PartConfig> PartConfig_default_instance_;

PartConfig* PartConfig::New(::google::protobuf::Arena* arena) const {
  PartConfig* n = new PartConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:PartConfig)
  part_.Clear();
  joint_.Clear();
  app_group_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PartConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PartConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PartDef part = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_part:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_part()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_part;
        if (input->ExpectTag(18)) goto parse_loop_joint;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Joint joint = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_joint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_joint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_joint;
        if (input->ExpectTag(26)) goto parse_loop_app_group;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .AppearanceGroup app_group = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_app_group:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_app_group()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_app_group;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PartConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PartConfig)
  return false;
#undef DO_
}

void PartConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PartConfig)
  // repeated .PartDef part = 1;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->part(i), output);
  }

  // repeated .Joint joint = 2;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->joint(i), output);
  }

  // repeated .AppearanceGroup app_group = 3;
  for (unsigned int i = 0, n = this->app_group_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->app_group(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PartConfig)
}

::google::protobuf::uint8* PartConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PartConfig)
  // repeated .PartDef part = 1;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->part(i), false, target);
  }

  // repeated .Joint joint = 2;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->joint(i), false, target);
  }

  // repeated .AppearanceGroup app_group = 3;
  for (unsigned int i = 0, n = this->app_group_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->app_group(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PartConfig)
  return target;
}

size_t PartConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PartConfig)
  size_t total_size = 0;

  // repeated .PartDef part = 1;
  {
    unsigned int count = this->part_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->part(i));
    }
  }

  // repeated .Joint joint = 2;
  {
    unsigned int count = this->joint_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->joint(i));
    }
  }

  // repeated .AppearanceGroup app_group = 3;
  {
    unsigned int count = this->app_group_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->app_group(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PartConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PartConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PartConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PartConfig)
    UnsafeMergeFrom(*source);
  }
}

void PartConfig::MergeFrom(const PartConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PartConfig)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PartConfig::UnsafeMergeFrom(const PartConfig& from) {
  GOOGLE_DCHECK(&from != this);
  part_.MergeFrom(from.part_);
  joint_.MergeFrom(from.joint_);
  app_group_.MergeFrom(from.app_group_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PartConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PartConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartConfig::CopyFrom(const PartConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PartConfig)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PartConfig::IsInitialized() const {

  return true;
}

void PartConfig::Swap(PartConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartConfig::InternalSwap(PartConfig* other) {
  part_.UnsafeArenaSwap(&other->part_);
  joint_.UnsafeArenaSwap(&other->joint_);
  app_group_.UnsafeArenaSwap(&other->app_group_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartConfig_descriptor_;
  metadata.reflection = PartConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartConfig

// repeated .PartDef part = 1;
int PartConfig::part_size() const {
  return part_.size();
}
void PartConfig::clear_part() {
  part_.Clear();
}
const ::PartDef& PartConfig::part(int index) const {
  // @@protoc_insertion_point(field_get:PartConfig.part)
  return part_.Get(index);
}
::PartDef* PartConfig::mutable_part(int index) {
  // @@protoc_insertion_point(field_mutable:PartConfig.part)
  return part_.Mutable(index);
}
::PartDef* PartConfig::add_part() {
  // @@protoc_insertion_point(field_add:PartConfig.part)
  return part_.Add();
}
::google::protobuf::RepeatedPtrField< ::PartDef >*
PartConfig::mutable_part() {
  // @@protoc_insertion_point(field_mutable_list:PartConfig.part)
  return &part_;
}
const ::google::protobuf::RepeatedPtrField< ::PartDef >&
PartConfig::part() const {
  // @@protoc_insertion_point(field_list:PartConfig.part)
  return part_;
}

// repeated .Joint joint = 2;
int PartConfig::joint_size() const {
  return joint_.size();
}
void PartConfig::clear_joint() {
  joint_.Clear();
}
const ::Joint& PartConfig::joint(int index) const {
  // @@protoc_insertion_point(field_get:PartConfig.joint)
  return joint_.Get(index);
}
::Joint* PartConfig::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:PartConfig.joint)
  return joint_.Mutable(index);
}
::Joint* PartConfig::add_joint() {
  // @@protoc_insertion_point(field_add:PartConfig.joint)
  return joint_.Add();
}
::google::protobuf::RepeatedPtrField< ::Joint >*
PartConfig::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:PartConfig.joint)
  return &joint_;
}
const ::google::protobuf::RepeatedPtrField< ::Joint >&
PartConfig::joint() const {
  // @@protoc_insertion_point(field_list:PartConfig.joint)
  return joint_;
}

// repeated .AppearanceGroup app_group = 3;
int PartConfig::app_group_size() const {
  return app_group_.size();
}
void PartConfig::clear_app_group() {
  app_group_.Clear();
}
const ::AppearanceGroup& PartConfig::app_group(int index) const {
  // @@protoc_insertion_point(field_get:PartConfig.app_group)
  return app_group_.Get(index);
}
::AppearanceGroup* PartConfig::mutable_app_group(int index) {
  // @@protoc_insertion_point(field_mutable:PartConfig.app_group)
  return app_group_.Mutable(index);
}
::AppearanceGroup* PartConfig::add_app_group() {
  // @@protoc_insertion_point(field_add:PartConfig.app_group)
  return app_group_.Add();
}
::google::protobuf::RepeatedPtrField< ::AppearanceGroup >*
PartConfig::mutable_app_group() {
  // @@protoc_insertion_point(field_mutable_list:PartConfig.app_group)
  return &app_group_;
}
const ::google::protobuf::RepeatedPtrField< ::AppearanceGroup >&
PartConfig::app_group() const {
  // @@protoc_insertion_point(field_list:PartConfig.app_group)
  return app_group_;
}

inline const PartConfig* PartConfig::internal_default_instance() {
  return &PartConfig_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
