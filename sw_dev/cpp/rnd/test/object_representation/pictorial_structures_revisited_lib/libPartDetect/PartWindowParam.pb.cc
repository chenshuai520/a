// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PartWindowParam.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PartWindowParam.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PartWindowParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartWindowParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PartWindowParam_PartParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PartWindowParam_PartParam_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PartWindowParam_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PartWindowParam_2eproto() {
  protobuf_AddDesc_PartWindowParam_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PartWindowParam.proto");
  GOOGLE_CHECK(file != NULL);
  PartWindowParam_descriptor_ = file->message_type(0);
  static const int PartWindowParam_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, train_object_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, bbox_offset_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, bbox_offset_y_),
  };
  PartWindowParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartWindowParam_descriptor_,
      PartWindowParam::internal_default_instance(),
      PartWindowParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, _has_bits_),
      -1,
      -1,
      sizeof(PartWindowParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam, _internal_metadata_));
  PartWindowParam_PartParam_descriptor_ = PartWindowParam_descriptor_->nested_type(0);
  static const int PartWindowParam_PartParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, part_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, window_size_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, window_size_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, pos_offset_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, pos_offset_y_),
  };
  PartWindowParam_PartParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PartWindowParam_PartParam_descriptor_,
      PartWindowParam_PartParam::internal_default_instance(),
      PartWindowParam_PartParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, _has_bits_),
      -1,
      -1,
      sizeof(PartWindowParam_PartParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartWindowParam_PartParam, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PartWindowParam_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartWindowParam_descriptor_, PartWindowParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PartWindowParam_PartParam_descriptor_, PartWindowParam_PartParam::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PartWindowParam_2eproto() {
  PartWindowParam_default_instance_.Shutdown();
  delete PartWindowParam_reflection_;
  PartWindowParam_PartParam_default_instance_.Shutdown();
  delete PartWindowParam_PartParam_reflection_;
}

void protobuf_InitDefaults_PartWindowParam_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  PartWindowParam_default_instance_.DefaultConstruct();
  PartWindowParam_PartParam_default_instance_.DefaultConstruct();
  PartWindowParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  PartWindowParam_PartParam_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PartWindowParam_2eproto_once_);
void protobuf_InitDefaults_PartWindowParam_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PartWindowParam_2eproto_once_,
                 &protobuf_InitDefaults_PartWindowParam_2eproto_impl);
}
void protobuf_AddDesc_PartWindowParam_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PartWindowParam_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025PartWindowParam.proto\"\217\002\n\017PartWindowPa"
    "ram\022(\n\004part\030\005 \003(\0132\032.PartWindowParam.Part"
    "Param\022 \n\023train_object_height\030\007 \001(\001:\003200\022"
    "\030\n\rbbox_offset_x\030\t \001(\001:\0010\022\030\n\rbbox_offset"
    "_y\030\n \001(\001:\0010\032|\n\tPartParam\022\017\n\007part_id\030\006 \001("
    "\005\022\030\n\rwindow_size_x\030\001 \001(\005:\0010\022\030\n\rwindow_si"
    "ze_y\030\002 \001(\005:\0010\022\024\n\014pos_offset_x\030\003 \001(\005\022\024\n\014p"
    "os_offset_y\030\004 \001(\005", 297);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PartWindowParam.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PartWindowParam_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PartWindowParam_2eproto_once_);
void protobuf_AddDesc_PartWindowParam_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PartWindowParam_2eproto_once_,
                 &protobuf_AddDesc_PartWindowParam_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PartWindowParam_2eproto {
  StaticDescriptorInitializer_PartWindowParam_2eproto() {
    protobuf_AddDesc_PartWindowParam_2eproto();
  }
} static_descriptor_initializer_PartWindowParam_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartWindowParam_PartParam::kPartIdFieldNumber;
const int PartWindowParam_PartParam::kWindowSizeXFieldNumber;
const int PartWindowParam_PartParam::kWindowSizeYFieldNumber;
const int PartWindowParam_PartParam::kPosOffsetXFieldNumber;
const int PartWindowParam_PartParam::kPosOffsetYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartWindowParam_PartParam::PartWindowParam_PartParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartWindowParam_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PartWindowParam.PartParam)
}

void PartWindowParam_PartParam::InitAsDefaultInstance() {
}

PartWindowParam_PartParam::PartWindowParam_PartParam(const PartWindowParam_PartParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PartWindowParam.PartParam)
}

void PartWindowParam_PartParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&part_id_, 0, reinterpret_cast<char*>(&pos_offset_y_) -
    reinterpret_cast<char*>(&part_id_) + sizeof(pos_offset_y_));
}

PartWindowParam_PartParam::~PartWindowParam_PartParam() {
  // @@protoc_insertion_point(destructor:PartWindowParam.PartParam)
  SharedDtor();
}

void PartWindowParam_PartParam::SharedDtor() {
}

void PartWindowParam_PartParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartWindowParam_PartParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartWindowParam_PartParam_descriptor_;
}

const PartWindowParam_PartParam& PartWindowParam_PartParam::default_instance() {
  protobuf_InitDefaults_PartWindowParam_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PartWindowParam_PartParam> PartWindowParam_PartParam_default_instance_;

PartWindowParam_PartParam* PartWindowParam_PartParam::New(::google::protobuf::Arena* arena) const {
  PartWindowParam_PartParam* n = new PartWindowParam_PartParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartWindowParam_PartParam::Clear() {
// @@protoc_insertion_point(message_clear_start:PartWindowParam.PartParam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PartWindowParam_PartParam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PartWindowParam_PartParam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(part_id_, pos_offset_y_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PartWindowParam_PartParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PartWindowParam.PartParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 window_size_x = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          set_has_window_size_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &window_size_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_window_size_y;
        break;
      }

      // optional int32 window_size_y = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_window_size_y:
          set_has_window_size_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &window_size_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos_offset_x;
        break;
      }

      // optional int32 pos_offset_x = 3;
      case 3: {
        if (tag == 24) {
         parse_pos_offset_x:
          set_has_pos_offset_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_offset_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pos_offset_y;
        break;
      }

      // optional int32 pos_offset_y = 4;
      case 4: {
        if (tag == 32) {
         parse_pos_offset_y:
          set_has_pos_offset_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_offset_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_part_id;
        break;
      }

      // optional int32 part_id = 6;
      case 6: {
        if (tag == 48) {
         parse_part_id:
          set_has_part_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PartWindowParam.PartParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PartWindowParam.PartParam)
  return false;
#undef DO_
}

void PartWindowParam_PartParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PartWindowParam.PartParam)
  // optional int32 window_size_x = 1 [default = 0];
  if (has_window_size_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->window_size_x(), output);
  }

  // optional int32 window_size_y = 2 [default = 0];
  if (has_window_size_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->window_size_y(), output);
  }

  // optional int32 pos_offset_x = 3;
  if (has_pos_offset_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_offset_x(), output);
  }

  // optional int32 pos_offset_y = 4;
  if (has_pos_offset_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos_offset_y(), output);
  }

  // optional int32 part_id = 6;
  if (has_part_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->part_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PartWindowParam.PartParam)
}

::google::protobuf::uint8* PartWindowParam_PartParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PartWindowParam.PartParam)
  // optional int32 window_size_x = 1 [default = 0];
  if (has_window_size_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->window_size_x(), target);
  }

  // optional int32 window_size_y = 2 [default = 0];
  if (has_window_size_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->window_size_y(), target);
  }

  // optional int32 pos_offset_x = 3;
  if (has_pos_offset_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_offset_x(), target);
  }

  // optional int32 pos_offset_y = 4;
  if (has_pos_offset_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos_offset_y(), target);
  }

  // optional int32 part_id = 6;
  if (has_part_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->part_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PartWindowParam.PartParam)
  return target;
}

size_t PartWindowParam_PartParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PartWindowParam.PartParam)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 part_id = 6;
    if (has_part_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part_id());
    }

    // optional int32 window_size_x = 1 [default = 0];
    if (has_window_size_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->window_size_x());
    }

    // optional int32 window_size_y = 2 [default = 0];
    if (has_window_size_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->window_size_y());
    }

    // optional int32 pos_offset_x = 3;
    if (has_pos_offset_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_offset_x());
    }

    // optional int32 pos_offset_y = 4;
    if (has_pos_offset_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_offset_y());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartWindowParam_PartParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PartWindowParam.PartParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PartWindowParam_PartParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartWindowParam_PartParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PartWindowParam.PartParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PartWindowParam.PartParam)
    UnsafeMergeFrom(*source);
  }
}

void PartWindowParam_PartParam::MergeFrom(const PartWindowParam_PartParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PartWindowParam.PartParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PartWindowParam_PartParam::UnsafeMergeFrom(const PartWindowParam_PartParam& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_part_id()) {
      set_part_id(from.part_id());
    }
    if (from.has_window_size_x()) {
      set_window_size_x(from.window_size_x());
    }
    if (from.has_window_size_y()) {
      set_window_size_y(from.window_size_y());
    }
    if (from.has_pos_offset_x()) {
      set_pos_offset_x(from.pos_offset_x());
    }
    if (from.has_pos_offset_y()) {
      set_pos_offset_y(from.pos_offset_y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PartWindowParam_PartParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PartWindowParam.PartParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartWindowParam_PartParam::CopyFrom(const PartWindowParam_PartParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PartWindowParam.PartParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PartWindowParam_PartParam::IsInitialized() const {

  return true;
}

void PartWindowParam_PartParam::Swap(PartWindowParam_PartParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartWindowParam_PartParam::InternalSwap(PartWindowParam_PartParam* other) {
  std::swap(part_id_, other->part_id_);
  std::swap(window_size_x_, other->window_size_x_);
  std::swap(window_size_y_, other->window_size_y_);
  std::swap(pos_offset_x_, other->pos_offset_x_);
  std::swap(pos_offset_y_, other->pos_offset_y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartWindowParam_PartParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartWindowParam_PartParam_descriptor_;
  metadata.reflection = PartWindowParam_PartParam_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartWindowParam::kPartFieldNumber;
const int PartWindowParam::kTrainObjectHeightFieldNumber;
const int PartWindowParam::kBboxOffsetXFieldNumber;
const int PartWindowParam::kBboxOffsetYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartWindowParam::PartWindowParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PartWindowParam_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PartWindowParam)
}

void PartWindowParam::InitAsDefaultInstance() {
}

PartWindowParam::PartWindowParam(const PartWindowParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PartWindowParam)
}

void PartWindowParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bbox_offset_x_, 0, reinterpret_cast<char*>(&bbox_offset_y_) -
    reinterpret_cast<char*>(&bbox_offset_x_) + sizeof(bbox_offset_y_));
  train_object_height_ = 200;
}

PartWindowParam::~PartWindowParam() {
  // @@protoc_insertion_point(destructor:PartWindowParam)
  SharedDtor();
}

void PartWindowParam::SharedDtor() {
}

void PartWindowParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartWindowParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PartWindowParam_descriptor_;
}

const PartWindowParam& PartWindowParam::default_instance() {
  protobuf_InitDefaults_PartWindowParam_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PartWindowParam> PartWindowParam_default_instance_;

PartWindowParam* PartWindowParam::New(::google::protobuf::Arena* arena) const {
  PartWindowParam* n = new PartWindowParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartWindowParam::Clear() {
// @@protoc_insertion_point(message_clear_start:PartWindowParam)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PartWindowParam, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PartWindowParam*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 14u) {
    ZR_(bbox_offset_x_, bbox_offset_y_);
    train_object_height_ = 200;
  }

#undef ZR_HELPER_
#undef ZR_

  part_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PartWindowParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PartWindowParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PartWindowParam.PartParam part = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_part:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_part()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_part;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(57)) goto parse_train_object_height;
        break;
      }

      // optional double train_object_height = 7 [default = 200];
      case 7: {
        if (tag == 57) {
         parse_train_object_height:
          set_has_train_object_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &train_object_height_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_bbox_offset_x;
        break;
      }

      // optional double bbox_offset_x = 9 [default = 0];
      case 9: {
        if (tag == 73) {
         parse_bbox_offset_x:
          set_has_bbox_offset_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bbox_offset_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_bbox_offset_y;
        break;
      }

      // optional double bbox_offset_y = 10 [default = 0];
      case 10: {
        if (tag == 81) {
         parse_bbox_offset_y:
          set_has_bbox_offset_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bbox_offset_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PartWindowParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PartWindowParam)
  return false;
#undef DO_
}

void PartWindowParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PartWindowParam)
  // repeated .PartWindowParam.PartParam part = 5;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->part(i), output);
  }

  // optional double train_object_height = 7 [default = 200];
  if (has_train_object_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->train_object_height(), output);
  }

  // optional double bbox_offset_x = 9 [default = 0];
  if (has_bbox_offset_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->bbox_offset_x(), output);
  }

  // optional double bbox_offset_y = 10 [default = 0];
  if (has_bbox_offset_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->bbox_offset_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PartWindowParam)
}

::google::protobuf::uint8* PartWindowParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PartWindowParam)
  // repeated .PartWindowParam.PartParam part = 5;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->part(i), false, target);
  }

  // optional double train_object_height = 7 [default = 200];
  if (has_train_object_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->train_object_height(), target);
  }

  // optional double bbox_offset_x = 9 [default = 0];
  if (has_bbox_offset_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->bbox_offset_x(), target);
  }

  // optional double bbox_offset_y = 10 [default = 0];
  if (has_bbox_offset_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->bbox_offset_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PartWindowParam)
  return target;
}

size_t PartWindowParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PartWindowParam)
  size_t total_size = 0;

  if (_has_bits_[1 / 32] & 14u) {
    // optional double train_object_height = 7 [default = 200];
    if (has_train_object_height()) {
      total_size += 1 + 8;
    }

    // optional double bbox_offset_x = 9 [default = 0];
    if (has_bbox_offset_x()) {
      total_size += 1 + 8;
    }

    // optional double bbox_offset_y = 10 [default = 0];
    if (has_bbox_offset_y()) {
      total_size += 1 + 8;
    }

  }
  // repeated .PartWindowParam.PartParam part = 5;
  {
    unsigned int count = this->part_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->part(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartWindowParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PartWindowParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PartWindowParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartWindowParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PartWindowParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PartWindowParam)
    UnsafeMergeFrom(*source);
  }
}

void PartWindowParam::MergeFrom(const PartWindowParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PartWindowParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PartWindowParam::UnsafeMergeFrom(const PartWindowParam& from) {
  GOOGLE_DCHECK(&from != this);
  part_.MergeFrom(from.part_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_train_object_height()) {
      set_train_object_height(from.train_object_height());
    }
    if (from.has_bbox_offset_x()) {
      set_bbox_offset_x(from.bbox_offset_x());
    }
    if (from.has_bbox_offset_y()) {
      set_bbox_offset_y(from.bbox_offset_y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PartWindowParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PartWindowParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartWindowParam::CopyFrom(const PartWindowParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PartWindowParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PartWindowParam::IsInitialized() const {

  return true;
}

void PartWindowParam::Swap(PartWindowParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartWindowParam::InternalSwap(PartWindowParam* other) {
  part_.UnsafeArenaSwap(&other->part_);
  std::swap(train_object_height_, other->train_object_height_);
  std::swap(bbox_offset_x_, other->bbox_offset_x_);
  std::swap(bbox_offset_y_, other->bbox_offset_y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartWindowParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PartWindowParam_descriptor_;
  metadata.reflection = PartWindowParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartWindowParam_PartParam

// optional int32 part_id = 6;
bool PartWindowParam_PartParam::has_part_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PartWindowParam_PartParam::set_has_part_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PartWindowParam_PartParam::clear_has_part_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PartWindowParam_PartParam::clear_part_id() {
  part_id_ = 0;
  clear_has_part_id();
}
::google::protobuf::int32 PartWindowParam_PartParam::part_id() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.PartParam.part_id)
  return part_id_;
}
void PartWindowParam_PartParam::set_part_id(::google::protobuf::int32 value) {
  set_has_part_id();
  part_id_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.PartParam.part_id)
}

// optional int32 window_size_x = 1 [default = 0];
bool PartWindowParam_PartParam::has_window_size_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PartWindowParam_PartParam::set_has_window_size_x() {
  _has_bits_[0] |= 0x00000002u;
}
void PartWindowParam_PartParam::clear_has_window_size_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void PartWindowParam_PartParam::clear_window_size_x() {
  window_size_x_ = 0;
  clear_has_window_size_x();
}
::google::protobuf::int32 PartWindowParam_PartParam::window_size_x() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.PartParam.window_size_x)
  return window_size_x_;
}
void PartWindowParam_PartParam::set_window_size_x(::google::protobuf::int32 value) {
  set_has_window_size_x();
  window_size_x_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.PartParam.window_size_x)
}

// optional int32 window_size_y = 2 [default = 0];
bool PartWindowParam_PartParam::has_window_size_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PartWindowParam_PartParam::set_has_window_size_y() {
  _has_bits_[0] |= 0x00000004u;
}
void PartWindowParam_PartParam::clear_has_window_size_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void PartWindowParam_PartParam::clear_window_size_y() {
  window_size_y_ = 0;
  clear_has_window_size_y();
}
::google::protobuf::int32 PartWindowParam_PartParam::window_size_y() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.PartParam.window_size_y)
  return window_size_y_;
}
void PartWindowParam_PartParam::set_window_size_y(::google::protobuf::int32 value) {
  set_has_window_size_y();
  window_size_y_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.PartParam.window_size_y)
}

// optional int32 pos_offset_x = 3;
bool PartWindowParam_PartParam::has_pos_offset_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PartWindowParam_PartParam::set_has_pos_offset_x() {
  _has_bits_[0] |= 0x00000008u;
}
void PartWindowParam_PartParam::clear_has_pos_offset_x() {
  _has_bits_[0] &= ~0x00000008u;
}
void PartWindowParam_PartParam::clear_pos_offset_x() {
  pos_offset_x_ = 0;
  clear_has_pos_offset_x();
}
::google::protobuf::int32 PartWindowParam_PartParam::pos_offset_x() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.PartParam.pos_offset_x)
  return pos_offset_x_;
}
void PartWindowParam_PartParam::set_pos_offset_x(::google::protobuf::int32 value) {
  set_has_pos_offset_x();
  pos_offset_x_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.PartParam.pos_offset_x)
}

// optional int32 pos_offset_y = 4;
bool PartWindowParam_PartParam::has_pos_offset_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PartWindowParam_PartParam::set_has_pos_offset_y() {
  _has_bits_[0] |= 0x00000010u;
}
void PartWindowParam_PartParam::clear_has_pos_offset_y() {
  _has_bits_[0] &= ~0x00000010u;
}
void PartWindowParam_PartParam::clear_pos_offset_y() {
  pos_offset_y_ = 0;
  clear_has_pos_offset_y();
}
::google::protobuf::int32 PartWindowParam_PartParam::pos_offset_y() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.PartParam.pos_offset_y)
  return pos_offset_y_;
}
void PartWindowParam_PartParam::set_pos_offset_y(::google::protobuf::int32 value) {
  set_has_pos_offset_y();
  pos_offset_y_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.PartParam.pos_offset_y)
}

inline const PartWindowParam_PartParam* PartWindowParam_PartParam::internal_default_instance() {
  return &PartWindowParam_PartParam_default_instance_.get();
}
// -------------------------------------------------------------------

// PartWindowParam

// repeated .PartWindowParam.PartParam part = 5;
int PartWindowParam::part_size() const {
  return part_.size();
}
void PartWindowParam::clear_part() {
  part_.Clear();
}
const ::PartWindowParam_PartParam& PartWindowParam::part(int index) const {
  // @@protoc_insertion_point(field_get:PartWindowParam.part)
  return part_.Get(index);
}
::PartWindowParam_PartParam* PartWindowParam::mutable_part(int index) {
  // @@protoc_insertion_point(field_mutable:PartWindowParam.part)
  return part_.Mutable(index);
}
::PartWindowParam_PartParam* PartWindowParam::add_part() {
  // @@protoc_insertion_point(field_add:PartWindowParam.part)
  return part_.Add();
}
::google::protobuf::RepeatedPtrField< ::PartWindowParam_PartParam >*
PartWindowParam::mutable_part() {
  // @@protoc_insertion_point(field_mutable_list:PartWindowParam.part)
  return &part_;
}
const ::google::protobuf::RepeatedPtrField< ::PartWindowParam_PartParam >&
PartWindowParam::part() const {
  // @@protoc_insertion_point(field_list:PartWindowParam.part)
  return part_;
}

// optional double train_object_height = 7 [default = 200];
bool PartWindowParam::has_train_object_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PartWindowParam::set_has_train_object_height() {
  _has_bits_[0] |= 0x00000002u;
}
void PartWindowParam::clear_has_train_object_height() {
  _has_bits_[0] &= ~0x00000002u;
}
void PartWindowParam::clear_train_object_height() {
  train_object_height_ = 200;
  clear_has_train_object_height();
}
double PartWindowParam::train_object_height() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.train_object_height)
  return train_object_height_;
}
void PartWindowParam::set_train_object_height(double value) {
  set_has_train_object_height();
  train_object_height_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.train_object_height)
}

// optional double bbox_offset_x = 9 [default = 0];
bool PartWindowParam::has_bbox_offset_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PartWindowParam::set_has_bbox_offset_x() {
  _has_bits_[0] |= 0x00000004u;
}
void PartWindowParam::clear_has_bbox_offset_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void PartWindowParam::clear_bbox_offset_x() {
  bbox_offset_x_ = 0;
  clear_has_bbox_offset_x();
}
double PartWindowParam::bbox_offset_x() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.bbox_offset_x)
  return bbox_offset_x_;
}
void PartWindowParam::set_bbox_offset_x(double value) {
  set_has_bbox_offset_x();
  bbox_offset_x_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.bbox_offset_x)
}

// optional double bbox_offset_y = 10 [default = 0];
bool PartWindowParam::has_bbox_offset_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PartWindowParam::set_has_bbox_offset_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PartWindowParam::clear_has_bbox_offset_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PartWindowParam::clear_bbox_offset_y() {
  bbox_offset_y_ = 0;
  clear_has_bbox_offset_y();
}
double PartWindowParam::bbox_offset_y() const {
  // @@protoc_insertion_point(field_get:PartWindowParam.bbox_offset_y)
  return bbox_offset_y_;
}
void PartWindowParam::set_bbox_offset_y(double value) {
  set_has_bbox_offset_y();
  bbox_offset_y_ = value;
  // @@protoc_insertion_point(field_set:PartWindowParam.bbox_offset_y)
}

inline const PartWindowParam* PartWindowParam::internal_default_instance() {
  return &PartWindowParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
