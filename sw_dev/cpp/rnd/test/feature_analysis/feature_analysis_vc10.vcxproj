<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{90978A1C-F8B5-4DE8-BB4C-359A1756BE6C}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>feature_analysis</RootNamespace>
    <ProjectName>feature_analysis_vc10</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 5.0.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>../../bin/</OutDir>
    <TargetName>$(ProjectName)_d</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>../../bin/</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>SIFTGPU_DLL;CUDA_SIFTGPU_ENABLED;SERVER_SIFTGPU_ENABLED;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>./fst_lib/_src_global;./fst_lib/_src_criteria;./fst_lib/_src_search;./fst_lib/_src_dataio;./svm_light_lib;../../inc/opencv-2.4.3/opencv2;../../inc/opencv-2.4.3;../../inc;./;../../inc/opencv-2.4.3/opencv;D:\MyProgramFiles\MATLAB\R2012b_win32\extern\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\include;D:\work\dev_https\sw_dev\cpp\ext\inc\cudpp;D:\work\dev_https\sw_dev\cpp\ext\inc\clapack</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>../../lib;D:\work_center\sw_dev\cpp\ext\lib;D:\MyProgramFiles\MATLAB\R2012b_win32\extern\lib\win32\microsoft;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\lib\Win32</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CudaCompile>
      <CInterleavedPTX>true</CInterleavedPTX>
    </CudaCompile>
    <CudaCompile>
      <CodeGeneration>compute_20,sm_21</CodeGeneration>
    </CudaCompile>
    <CudaCompile>
      <PtxAsOptionV>true</PtxAsOptionV>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>SIFTGPU_DLL;CUDA_SIFTGPU_ENABLED;SERVER_SIFTGPU_ENABLED;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>./fst_lib/_src_global;./fst_lib/_src_criteria;./fst_lib/_src_search;./fst_lib/_src_dataio;./svm_light_lib;../../inc/opencv-2.4.3/opencv2;../../inc/opencv-2.4.3;../../inc;./;../../inc/opencv-2.4.3/opencv;D:\MyProgramFiles\MATLAB\R2012b_win32\extern\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\include;D:\work\dev_https\sw_dev\cpp\ext\inc\cudpp;D:\work\dev_https\sw_dev\cpp\ext\inc\clapack</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>../../lib;D:\work_center\sw_dev\cpp\ext\lib;D:\MyProgramFiles\MATLAB\R2012b_win32\extern\lib\win32\microsoft;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.0\lib\Win32</AdditionalLibraryDirectories>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CudaCompile>
      <AdditionalCompilerOptions>
      </AdditionalCompilerOptions>
      <CodeGeneration>compute_20,sm_21</CodeGeneration>
      <CInterleavedPTX>true</CInterleavedPTX>
      <PtxAsOptionV>true</PtxAsOptionV>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="ReadMe.txt" />
    <CudaCompile Include="surfgpu_lib\cuda\buildDetCUDA.cu">
      <FileType>Document</FileType>
      <CInterleavedPTX Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</CInterleavedPTX>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">compute_20,sm_21</CodeGeneration>
      <PtxAsOptionV Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</PtxAsOptionV>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\buildDetGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\buildSURFDescriptorsCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\buildSURFDescriptorsGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\convertRGB2GrayFloatCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\convertRGB2GrayFloatGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\convertRGBA2GrayFloatCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\convertRGBA2GrayFloatGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\detectIpointOrientationsCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\detectIpointOrientationsGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\haarXY.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\matchSURFKeypointsCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\matchSURFKeypointsGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\nonMaxCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\nonMaxGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\normalizeSURFDescriptorsCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\normalizeSURFDescriptorsGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\reductionCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\transposeCUDA.cu">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </CudaCompile>
    <CudaCompile Include="surfgpu_lib\cuda\transposeGPU.cu">
      <FileType>Document</FileType>
    </CudaCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="elsd_lib\elsd.h" />
    <ClInclude Include="elsd_lib\process_curve.h" />
    <ClInclude Include="elsd_lib\process_line.h" />
    <ClInclude Include="elsd_lib\valid_curve.h" />
    <ClInclude Include="elsd_lib\write_svg.h" />
    <ClInclude Include="fst_lib\_src_criteria\classifier.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\classifier_knn.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\classifier_multinom_naivebayes.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\classifier_normal_bayes.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\classifier_svm.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_multinom.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_multinom_bhattacharyya.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_negative.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_normal.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_normal_bhattacharyya.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_normal_divergence.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_normal_gmahalanobis.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_subsetsize.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_sumofweights.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_wrapper.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\criterion_wrapper_bias_estimate.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\distance.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\distance_euclid.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\distance_L1.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\distance_Lp.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\indexed_matrix.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\indexed_vector.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\model.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\model_multinom.hpp" />
    <ClInclude Include="fst_lib\_src_criteria\model_normal.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_accessor.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_accessor_splitting.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_accessor_splitting_mem.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_accessor_splitting_memARFF.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_accessor_splitting_memTRN.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_file_ARFF.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_file_TRN.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_intervaller.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_scaler.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_scaler_to01.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_scaler_void.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_scaler_white.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_5050.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_cv.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_holdout.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_leave1out.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_randfix.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_randrand.hpp" />
    <ClInclude Include="fst_lib\_src_dataio\data_splitter_resub.hpp" />
    <ClInclude Include="fst_lib\_src_global\clonable.hpp" />
    <ClInclude Include="fst_lib\_src_global\error.hpp" />
    <ClInclude Include="fst_lib\_src_global\global.hpp" />
    <ClInclude Include="fst_lib\_src_global\subset.hpp" />
    <ClInclude Include="fst_lib\_src_global\thread_pool.hpp" />
    <ClInclude Include="fst_lib\_src_search\branch_and_bound_predictor.hpp" />
    <ClInclude Include="fst_lib\_src_search\branch_and_bound_predictor_averaging.hpp" />
    <ClInclude Include="fst_lib\_src_search\candidate_evaluator_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\result_tracker.hpp" />
    <ClInclude Include="fst_lib\_src_search\result_tracker_dupless.hpp" />
    <ClInclude Include="fst_lib\_src_search\result_tracker_feature_stats.hpp" />
    <ClInclude Include="fst_lib\_src_search\result_tracker_regularizer.hpp" />
    <ClInclude Include="fst_lib\_src_search\result_tracker_stabileval.hpp" />
    <ClInclude Include="fst_lib\_src_search\search.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_bif.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_bif_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound_basic.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound_fast.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound_improved.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound_improved_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_branch_and_bound_partial_prediction.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_exhaustive.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_exhaustive_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_monte_carlo.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_monte_carlo_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq_dos.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq_os.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq_sffs.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq_sfrs.hpp" />
    <ClInclude Include="fst_lib\_src_search\search_seq_sfs.hpp" />
    <ClInclude Include="fst_lib\_src_search\seq_step.hpp" />
    <ClInclude Include="fst_lib\_src_search\seq_step_ensemble.hpp" />
    <ClInclude Include="fst_lib\_src_search\seq_step_hybrid.hpp" />
    <ClInclude Include="fst_lib\_src_search\seq_step_straight.hpp" />
    <ClInclude Include="fst_lib\_src_search\seq_step_straight_threaded.hpp" />
    <ClInclude Include="fst_lib\_src_search\stopwatch.hpp" />
    <ClInclude Include="lsd_lib\lsd.h" />
    <ClInclude Include="opensurf_lib\fasthessian.h" />
    <ClInclude Include="opensurf_lib\integral.h" />
    <ClInclude Include="opensurf_lib\ipoint.h" />
    <ClInclude Include="opensurf_lib\kmeans.h" />
    <ClInclude Include="opensurf_lib\responselayer.h" />
    <ClInclude Include="opensurf_lib\surf.h" />
    <ClInclude Include="opensurf_lib\surflib.h" />
    <ClInclude Include="opensurf_lib\utils.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="surfgpu_lib\buildDetGPU.h" />
    <ClInclude Include="surfgpu_lib\buildSURFDescriptorsGPU.h" />
    <ClInclude Include="surfgpu_lib\convertRGB2GrayFloatGPU.h" />
    <ClInclude Include="surfgpu_lib\convertRGBA2GrayFloatGPU.h" />
    <ClInclude Include="surfgpu_lib\cudaimage.h" />
    <ClInclude Include="surfgpu_lib\cuda\common_kernel.h" />
    <ClInclude Include="surfgpu_lib\cuda\cudpp_helper_funcs.h" />
    <ClInclude Include="surfgpu_lib\cuda\helper_funcs.h" />
    <ClInclude Include="surfgpu_lib\cuda\strerror_cudpp.h" />
    <ClInclude Include="surfgpu_lib\defines.h" />
    <ClInclude Include="surfgpu_lib\detectIpointOrientationsGPU.h" />
    <ClInclude Include="surfgpu_lib\fasthessianGPU.h" />
    <ClInclude Include="surfgpu_lib\fasthessian_cudaipoint.h" />
    <ClInclude Include="surfgpu_lib\integralGPU.h" />
    <ClInclude Include="surfgpu_lib\ipointGPU.h" />
    <ClInclude Include="surfgpu_lib\kmeansGPU.h" />
    <ClInclude Include="surfgpu_lib\matchSURFKeypointsGPU.h" />
    <ClInclude Include="surfgpu_lib\nonMaxGPU.h" />
    <ClInclude Include="surfgpu_lib\normalizeSURFDescriptorsGPU.h" />
    <ClInclude Include="surfgpu_lib\surfGPU.h" />
    <ClInclude Include="surfgpu_lib\surflibGPU.h" />
    <ClInclude Include="surfgpu_lib\surf_cudaipoint.h" />
    <ClInclude Include="surfgpu_lib\transposeGPU.h" />
    <ClInclude Include="surfgpu_lib\utilsGPU.h" />
    <ClInclude Include="surf\surf_imload.h" />
    <ClInclude Include="surf\surf_os_mapping.h" />
    <ClInclude Include="svm_light_lib\svm_light\kernel.h" />
    <ClInclude Include="svm_light_lib\svm_light\svm_common.h" />
    <ClInclude Include="svm_light_lib\svm_light\svm_learn.h" />
    <ClInclude Include="targetver.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="elsd\elsd_main.cpp" />
    <ClCompile Include="elsd_lib\elsd.cpp" />
    <ClCompile Include="elsd_lib\process_curve.cpp" />
    <ClCompile Include="elsd_lib\process_line.cpp" />
    <ClCompile Include="elsd_lib\valid_curve.cpp" />
    <ClCompile Include="elsd_lib\write_svg.cpp" />
    <ClCompile Include="fst\fst_demo10.cpp" />
    <ClCompile Include="fst\fst_main.cpp" />
    <ClCompile Include="fst_lib\_src_global\global.cpp" />
    <ClCompile Include="hog\hog_main.cpp" />
    <ClCompile Include="hog\hog_training_HOG.cpp" />
    <ClCompile Include="library_autolinking.cpp" />
    <ClCompile Include="lsd\lsd_main.cpp" />
    <ClCompile Include="lsd_lib\lsd.cpp" />
    <ClCompile Include="lsd_lib\lsd_call_example.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="lsd_lib\lsd_cmd.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="main.cpp" />
    <ClCompile Include="opensift\opensift_display_feature.cpp" />
    <ClCompile Include="opensift\opensift_extract_feature.cpp" />
    <ClCompile Include="opensift\opensift_main.cpp" />
    <ClCompile Include="opensift\opensift_match_feature.cpp" />
    <ClCompile Include="opensurf\opensurf_example.cpp" />
    <ClCompile Include="opensurf\opensurf_main.cpp" />
    <ClCompile Include="opensurf_lib\fasthessian.cpp" />
    <ClCompile Include="opensurf_lib\integral.cpp" />
    <ClCompile Include="opensurf_lib\ipoint.cpp" />
    <ClCompile Include="opensurf_lib\main.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="opensurf_lib\surf.cpp" />
    <ClCompile Include="opensurf_lib\utils.cpp" />
    <ClCompile Include="siftgpu\siftgpu_main.cpp" />
    <ClCompile Include="siftgpu\siftgpu_simple_example.cpp" />
    <ClCompile Include="stdafx.cpp" />
    <ClCompile Include="surfgpu\surfgpu_example.cpp" />
    <ClCompile Include="surfgpu\surfgpu_main.cpp" />
    <ClCompile Include="surfgpu_lib\cuda\getMatchesGPU.cpp" />
    <ClCompile Include="surfgpu_lib\cuda\helper_funcs.cpp" />
    <ClCompile Include="surfgpu_lib\cuda\strerror_cudpp.cpp" />
    <ClCompile Include="surfgpu_lib\fasthessianGPU.cpp" />
    <ClCompile Include="surfgpu_lib\getMatchesCPU.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="surfgpu_lib\integralGPU.cpp" />
    <ClCompile Include="surfgpu_lib\ipointGPU.cpp" />
    <ClCompile Include="surfgpu_lib\main.cpp">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="surfgpu_lib\surfGPU.cpp" />
    <ClCompile Include="surfgpu_lib\utilsGPU.cpp" />
    <ClCompile Include="svm_light_lib\svm_light\svm_classify.c">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="svm_light_lib\svm_light\svm_common.c" />
    <ClCompile Include="svm_light_lib\svm_light\svm_hideo.c" />
    <ClCompile Include="svm_light_lib\svm_light\svm_learn.c" />
    <ClCompile Include="svm_light_lib\svm_light\svm_learn_main.c">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="svm_light_lib\svm_light\svm_loqo.c">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
    </ClCompile>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 5.0.targets" />
  </ImportGroup>
</Project>