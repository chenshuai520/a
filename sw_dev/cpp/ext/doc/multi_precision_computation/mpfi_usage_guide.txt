[-] General.
	- Site.
		https://gforge.inria.fr/projects/mpfi/
	- Reference.
		gmp_usage_guide.txt

		NOTICE [caution] >> Static library로 build 됨.

[-] Building static library (Cygwin & MinGW).
	Run "Cygwin Bash" or "MSYS".
	cd ${MPFI_HOME}
	./configure --prefix=${MPFI_INSTALL} --with-mpfr-include=${MPFR_INSTALL}/include --with-mpfr-lib=${MPFR_INSTALL}/lib --with-gmp-include=${GMP_INSTALL}/include --with-gmp-lib=${GMP_INSTALL}/lib
	make
	(Optional) make check
	(Optional) make install

	==> .a file이 생성.

[-] Building shared library (Cygwin & MinGW).
	1. Build shared library.
		Run "Cygwin Bash" or "MSYS".
		cd ${MPFI_HOME}
		./configure --prefix=${MPFI_INSTALL} --with-mpfr-include=${MPFR_INSTALL}/include --with-mpfr-lib=${MPFR_INSTALL}/lib --with-gmp-include=${GMP_INSTALL}/include --with-gmp-lib=${GMP_INSTALL}/lib --disable-static --enable-shared
		make
		(Optional) make check
		(Optional) make install

		A windows DLL "cygmpfi-1.dll" (Cygwin) or "libmpfi-1.dll" (MinGW) will be generated.

		==> Shared library가 생성되지 않음.
			MPFI library에서 shared library를 지원하지 않는 듯함.

	2. To ensure that these DLLs can be called by a Microsoft Visual C++ program.
		You must generate an import library (.lib) for them.

		If you have an existing DLL already, you need to build a Cygwin-compatible import library.

		(1) If there is no def file in ${MPFI_HOME}/src/.libs, generate def file.
			cd ${MPFI_HOME}/src/.libs or ${MPFI_INSTALL}/bin
			echo EXPORTS > ${MPFI_LIB_NAME}.dll.def
			nm ${MPFI_LIB_NAME}.dll | grep ' T _' | sed 's/.* T _//' >> ${MPFI_LIB_NAME}.dll.def

			where ${MPFI_LIB_NAME} means cygmpfi-1 (Cygwin) or libmpfi-1 (MinGW)

			Note that this will only work if the DLL is not stripped.
			Otherwise you will get an error message: "No symbols in ${MPFI_LIB_NAME}.dll".

		(2) Once you have the ${MPFI_LIB_NAME}.dll.def file, you can create an import library from it like this.

			(주의) dll file과 def file의 이름이 다르다면 def file의 이름과 형식에 맞추어 dll file과 lib file의 이름을 정해야 한다. (확인 필요)
				e.g.) libmpfi-10.dll & libmpfi-1.dll.def ==> libmpfi-1.dll.dll & libmpfi-1.dll.def

			cd ${MPFI_HOME}/src/.libs
			mv ${MPFI_LIB_NAME}.dll ${MPFI_LIB_NAME}.dll.dll
			(a) Using dlltool in Cygwin & MinGW.
				dlltool --def ${MPFI_LIB_NAME}.dll.def --dllname ${MPFI_LIB_NAME}.dll.dll --output-lib ${MPFI_LIB_NAME}.dll.lib
			(b) Using Microsoft LIB tool.
				lib /machine:i386 /def:${MPFI_LIB_NAME}.dll.def /out:${MPFI_LIB_NAME}.dll.lib

		(3) (Optional) In Cygwin & MinGW.
			Removes unnecessary information from executable binary programs and object files,
			thus potentially resulting in better performance and sometimes significantly less disk space usage.

			strip ${MPFI_LIB_NAME}.dll.lib
