[-] General.
	- Site.
		http://math-atlas.sourceforge.net/atlas_install/
		http://math-atlas.sourceforge.net/errata.htm

		http://www.netlib.org/atlas/archives/
		http://www.netlib.org/atlas/archives/windows/
		http://www.netlib.org/atlas/archives/linux/

		http://sourceforge.net/projects/math-atlas/forums/forum/1026734/topic/3434546
		http://icl.cs.utk.edu/lapack-for-windows/clapack/index.html

	- Reference.
		${GDT_HOME}/sw_dev/cpp/ext/src/linear_algebra/linear_algebra_library_usage_guide.txt

[-] Usage.
	- Library.
		libsatlas.so/dylib/dll
			ATLAS's sequential libs.
			All serial APIs (serial lapack, serial BLAS).
		libtatlas.so/dylib/dll
			ATLAS's threaded libs.
			All parallel APIs (parallel LAPACK and parallel BLAS).

	- Run executables linked with ATLAS (shared) libraries.
	    ATLAS (shared) library와 link된 executable을 실행하기 위해서는 아래의 library가 있어야 함.
			libgcc_s_dw2-1.dll
			libgfortran-3.dll
			libquadmath-0.dll
		==> Cygwin에서 제공.

[-] Build ver. 3.10.3 (Cygwin + Win32/64).
	REF [doc] >> ${ATLAS_HOME}/doc/atlas_install.pdf
		"Special Instruction for Windows" sub-chapter.
			"Creating MSVC++ compatible import libraries" section.
	REF [doc] >> ${ATLAS_HOME}/INSTALL.txt

	- Make a build directory.
		mkdir ${ATLAS_BUILD_DIR}
		cd ${ATLAS_BUILD_DIR}
			e.g.) ${ATLAS_BUILD_DIR} = build_cygwin인 경우.
				mkdir build_cygwin
				cd build_cygwin
	- (Optional) specify the MinGW binutils to use.
		${ATLAS_BUILD_DIR}/MinGW32.dat
			/usr/bin/i686-pc-mingw32-ar.exe
			/usr/bin/i686-pc-mingw32-ranlib.exe
			/usr/bin/i686-pc-mingw32-gc.exe
			/usr/bin/i686-pc-mingw32-gfortran.exe
		${ATLAS_BUILD_DIR}/MinGW64.dat
			/usr/bin/x86_64-w64-mingw32-ar.exe
			/usr/bin/x86_64-w64-mingw32-ranlib.exe
			/usr/bin/x86_64-w64-mingw32-gcc.exe
			/usr/bin/x86_64-w64-mingw32-gfortran.exe
		REF [doc] >> "Specifying the MinGW binutils to use" section in ${ATLAS_HOME}/doc/atlas_install.pdf
		REF [site] >> http://math-atlas.sourceforge.net/atlas_install/node55.html
		REF [site] >> http://math-atlas.sourceforge.net/atlas_install/
	- Configure library.
		Options:
			-Si nocygwin 1
			-b 32
			-D c -DPentiumCPS=2833
			-Fa alg
			-fPIC
		Shared library:
			../configure --prefix=./install --shared -Si nocygwin 1 ==> For 64-bit.
			../configure --prefix=./install --shared -Si nocygwin 1 -b 32 ==> For 32-bit.
			../configure --prefix=./install --shared
		Static library:
			../configure --prefix=./install -Si nocygwin 1 ==> For 64-bit.
			../configure --prefix=./install -Si nocygwin 1 -b 32 ==> For 32-bit.
			../configure --prefix=./install
		==> configure를 실행하면 error가 발생되는 경우가 있는데, 생성된 file을 모두 삭제 후 재실행하면 되는 경우가 있음.
	- (Optional) build 32-bit libraries on cygwin64.
		Edit ${ATLAS_BUILD_DIR}/Make.inc.
			Look for XCCFLAGS.
			Change -m32 to -m64.
		==> '-b 32' option을 지정하면 -m32 option을 가지는 file이 생성.
		REF [doc] >> "Building 32-bit libraries on 64-bit Windows and cygwin64" section in ${ATLAS_HOME}/doc/atlas_install.pdf
	- Revise ${ATLAS_BUILD_DIR}/Make.top.
		REF [] >> Trouble shooting (Cygwin) (ver. 3.10.3).
	- Build library.
		make > make.log
			==> library file은 ${ATLAS_BUILD_DIR}/lib directory에 생성.
		make check
		make time
		make install
			==> 'make install'을 수행하기 위해서 관리자 권한이 필요한 경우가 있음.
				e.g.) /usr/local directory에 설치하는 경우.
				cygwin을 관리자 권한으로 실행해야 함.
	- Create import library.
		1. ATLAS library가 생성해주는 def files (libtatlas.def & libsatlas.def)를 사용하는 경우.
			For 32-bit:
				lib.exe /nologo /machine:x86 /def:libtatlas.def
				lib.exe /nologo /machine:x86 /def:libsatlas.def
			For 64-bit:
				lib.exe /nologo /machine:x64 /def:libtatlas.def
				lib.exe /nologo /machine:x64 /def:libsatlas.def
			REF [doc] >> "Creating MSVC++ compatible import libraries" section in ${ATLAS_HOME}/doc/atlas_install.pdf
			==> VC++에서 정상적으로 link가 되지 않음.
		2. dumpbin.exe를 이용해 def files을 직접 생성하는 경우.
			REF [doc] >> interoperate_libraries_in_MSVC_MinGW_Cygwin.txt
	- Run executables linked with ATLAS (shared) libraries.
		REF [] >> Usage section.

[-] Build (Cygwin).
	REF [doc] >> ${ATLAS_HOME}/doc/atlas_install.pdf
		"Special Instruction for Windows" sub-chapter.
			"Creating MSVC++ compatible import libraries" section.
	REF [doc] >> ${ATLAS_HOME}/INSTALL.txt
	REF [doc] >> ${ATLAS_HOME}/doc/Windows.txt

	- Tip.
		Cygwin에서 building 시 error가 많이 발생하는데 출력되는 사항이 많이 error를 확인하는 것이 어려움.
			==> config & make의 결과를 log file을 redirection해서 볼 것.
		Log file에서 error를 찾을 때 아래의 keyword 사용 가능.
			error, fail.

	- Trouble shooting.
		Make.inc를 생성하지 못하는 경우 (1).
			copy ${ATLAS_HOME}/interfaces/lapack/Make.inc.Linux to Make.inc
		Make.inc를 생성하지 못하는 경우 (2).
			설정된 PATH에 '공백', '(', ')' 같은 문자가 있을 경우 error 발생.
			==> PATH를 변경해 줌.
				export PATH=/usr/local/bin:/usr/bin
			Cygwin에 기본적으로 설정되는 path는 Windows에 설정된 path가 포함되는데 이들이 error를 발생시킴.
		아래의 "Trouble shooting when building library in Cygwin" section 내용 참고.

	- Set $PATH.
		export PATH=/usr:/usr/local/bin:/usr/bin
		==> 설정된 PATH에 '공백', '(', ')' 같은 문자가 있을 경우 error 발생.
			Cygwin에 기본적으로 설정되는 path는 Windows에 설정된 path가 포함되는데 이들이 error를 발생시킴.
			Make.inc를 생성하지 못하게 됨.
	- Set $LD_LIBRARY_PATH.
		export LD_LIBRARY_PATH=.:/usr:/usr/local/lib:/usr/lib:/usr/i686-pc-mingw32/sys-root/mingw/lib
		export LD_LIBRARY_PATH=.:/usr:/usr/local/lib:/usr/lib:/usr/x86_64-w64-mingw32/sys-root/mingw/lib
	- Make a build directory.
		mkdir ${ATLAS_BUILD_DIR}
		cd ${ATLAS_BUILD_DIR}
			e.g.) ${ATLAS_BUILD_DIR} = build_cyg인 경우.
				mkdir build_cyg
				cd build_cyg
	- (Optional) specify the MinGW binutils to use.
		${ATLAS_BUILD_DIR}/MinGW32.dat or ${ATLAS_BUILD_DIR}/MinGW64.dat
			e.g.) MinGW32.dat
				/usr/bin/i686-pc-mingw32-ar.exe
				/usr/bin/i686-pc-mingw32-ranlib.exe
				/usr/bin/i686-pc-mingw32-gcc-4.8.3.exe
				/usr/bin/i686-pc-mingw32-gfortran.exe
			e.g.) MinGW64.dat
				/usr/bin/x86_64-w64-mingw32-ar.exe
				/usr/bin/x86_64-w64-mingw32-ranlib.exe
				/usr/bin/x86_64-w64-mingw32-gcc-4.8.3.exe
				/usr/bin/x86_64-w64-mingw32-gfortran.exe
		REF [doc] >> "Specifying the MinGW binutils to use" section in ${ATLAS_HOME}/doc/atlas_install.pdf
		REF [site] >> http://math-atlas.sourceforge.net/atlas_install/node55.html
		REF [site] >> http://math-atlas.sourceforge.net/atlas_install/
	- Copy LAPACK file to ${ATLAS_HOME}.
		${ATLAS_HOME}/lapack-3.5.0.tgz
	- Configure library.
		Options:
			-b 32
			-Si nocygwin 1
			-D c -DPentiumCPS=2833
			-Fa alg
			-fPIC
		Static library:
			../configure --prefix=./install --with-netlib-lapack-tarfile=/cygdrive/d/work/sw_dev/cpp/ext/src/linear_algebra/atlas/atlas3.10.1.tar/ATLAS/lapack-3.5.0.tgz
			For problems with gcc 4.2 on Windows.
			../configure --prefix=./install --with-netlib-lapack-tarfile=../lapack-3.5.0.tgz -b 32 -D c -DPentiumCPS=2833 -Fa alg -fno-common
		Shared library:
			../configure --prefix=./install --shared --with-netlib-lapack-tarfile=/cygdrive/d/work/sw_dev/cpp/ext/src/linear_algebra/atlas/atlas3.10.1.tar/ATLAS/lapack-3.5.0.tgz
			For problems with gcc 4.2 on Windows.
			../configure --prefix=./install --shared --with-netlib-lapack-tarfile=../lapack-3.5.0.tgz -b 32 -Si nocygwin 1 -D c -DPentiumCPS=2833 -Fa alg -fPIC -fno-common
			==> Cygwin에서는 shared object가 생성되지 않는 듯함.
		==> Error가 발생하는 경우가 있는데 이럴 경우 다시 시도해볼 것.
		==> Make.inc가 생성되지 않음.
	- Build library.
		make > make.log
		make check
		make time
		make install
	- (Static library를 build 하였을 경우) convert static library files to a DLL file.
		REF [site] >> http://www.terborg.net/research/kml/installation.html

	==> Static library files (*.a)를 생성한 후 이로부터 shared object (DLL) file을 생성하는 경우.
		libatlas.a를 포함하는 directory에서 kml_win_dll.sh 실행.
		Cygwin에 MinGW module들이 설치되어 있어야 정상적으로 작동함.
			libg2c.a (GCC4.x.x에서는 필요없음)
			libmoldname100.a
			libmsvcrt.a
		Shared object (DLL)를 직접적으로 생성하는 것이 바람직.

[-] Build (MinGW).
	REF [doc] >> http://icl.cs.utk.edu/lapack-for-windows/lapack/
		Build Instructions to create LAPACK and LAPACKE 3.5.0 dlls for Windows with MinGW.

	- Use MSYS.
		1. (Optional) put the GNU runtime directory in $PATH.
			export PATH=/D/MyProgramFiles/MinGW/bin:$PATH
		2. Change a directory to $ATLAS_HOME.
		3. Make & change a build directory.
			mkdir build_msys
			cd build_msys
		3. Configure.
			../configure --prefix=./install --shared --with-netlib-lapack-tarfile=../lapack-3.5.0.tgz
			==> xconfig error.
		4. Make.
			mingw32-make
			mingw32-make install

[-] Trouble shooting (Cygwin) (ver. 3.10.3).
	- '-V' option 관련 오류.
		/bin/gcc.exe -V 2>&1
		==> '-v' option의 오타인 듯함.
			In ${ATLAS_BUILD_DIR}/Make.top, comment the corresponding line or change '-V' to '-v'.

[-] Trouble shooting (Cygwin) (ver. 3.9.72).
	- 아래의 file을 copy할 수 없다는 error가 발생하는 경우.
		${ATLAS_HOME}/build_cyg/ARCHS/Core232SSE3/gemm/atlas_tcacheedge.h
		==> atlas_tcacheedge.h file을 다른 directory에서 찾아 해당 directory에 복사.
	- ${ATLAS_BUILD_DIR}/tune/threads/Makefile 에서 probe.out 부분을 찾아 주석 처리.
		#	- rm res/probe.out
			- rm res/probe.out
	- ${ATLAS_BUILD_DIR}/tune/threads/Makefile 에서 xtune_aff 부분을 찾아 ATL_goparallel_noaff.o를 삭제.
		#xtune_aff : tune_aff.o tlib  ATL_goparallel_noaff.o ATL_log2tlaunch_noaff.o \
		#             ATL_goparallel_aff.o ATL_log2tlaunch.o \
		#             ATL_thread_start_noaff.o ATL_thread_start.o
		#	$(CC) $(CCFLAGS) -o xtune_aff tune_aff.o ATL_goparallel_noaff.o \
		#              ATL_goparallel_aff.o ATL_log2tlaunch_noaff.o ATL_log2tlaunch.o \
		#              ATL_thread_start_noaff.o ATL_thread_start.o $(ATLASlib) $(LIBS)
		xtune_aff : tune_aff.o tlib  ATL_log2tlaunch_noaff.o \
		             ATL_goparallel_aff.o ATL_log2tlaunch.o \
		             ATL_thread_start_noaff.o ATL_thread_start.o
			$(CC) $(CCFLAGS) -o xtune_aff tune_aff.o \
		              ATL_goparallel_aff.o ATL_log2tlaunch_noaff.o ATL_log2tlaunch.o \
		              ATL_thread_start_noaff.o ATL_thread_start.o $(ATLASlib) $(LIBS)
	- ${ATLAS_HOME}/src/threads/ATL_DecAtomicCount_amd64.S에서 register 이름을 변경.
		//   sub $-128, %rdi            /* skip false sharing guard zone */
		   sub $-128, %edi            /* skip false sharing guard zone */
		   ATOMIC_LOOP:
		//      movl (%rdi), %eax       /* read cnt from memory */
		      movl (%edi), %eax       /* read cnt from memory */
		      movl %eax, %ecx         /* ecx = cnt */
		      subl $1, %ecx           /* ecx = cnt-1 */
		      jl ZERO_RET             /* return 0 if count already below 1 */
		      lock                    /* make cmpxchg atomic */
		//      cmpxchg %ecx, (%rdi)    /* put cnt-1 in mem if mem still == cnt in eax */
		      cmpxchg %ecx, (%edi)    /* put cnt-1 in mem if mem still == cnt in eax */
		      je DONE                 /* ZF set if cmpxchg wrote to mem */
		   jmp ATOMIC_LOOP            /* ZF=0 means cmpxch failed, try again */
		
		ZERO_RET:
		//   xor %rax, %rax
		   xor %eax, %eax
	- ${ATLAS_HOME}/src/threads/ATL_ResetAtomicCount_amd64.S에서 register 이름을 변경.
		//   sub $-128, %rdi            /* skip false sharing guard zone */
		   sub $-128, %edi            /* skip false sharing guard zone */
		   ATOMIC_LOOP:
		//      movl (%rdi), %eax       /* read acnt from memory */
		      movl (%edi), %eax       /* read acnt from memory */
		      lock                    /* make cmpxchg atomic */
		//      cmpxchg %esi, (%rdi)   /* put cnt in mem if mem still == acnt in eax */
		      cmpxchg %esi, (%edi)   /* put cnt in mem if mem still == acnt in eax */
