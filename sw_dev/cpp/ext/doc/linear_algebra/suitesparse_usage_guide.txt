[-] General.
	- Site.
		http://faculty.cse.tamu.edu/davis/suitesparse.html

		https://github.com/PetterS/SuiteSparse

		http://www.cise.ufl.edu/research/sparse/SuiteSparse/
		http://www.cise.ufl.edu/research/sparse/
		http://www.cise.ufl.edu/research/sparse/UFconfig/

		http://www.cise.ufl.edu/research/sparse/cholmod/
		http://www.cise.ufl.edu/research/sparse/umfpack/
		http://www.cise.ufl.edu/research/sparse/ldl/
		http://www.cise.ufl.edu/research/sparse/SPQR/

		http://matrixprogramming.com/2008/03/umfpack

[-] Building (Cygwin GCC).
	REF [file] >> ${SUITESPARSE_HOME}/README.txt

	- Set compiler & linker, etc.
		CC=i686-pc-mingw32-gcc
		CXX=i686-pc-mingw32-g++
		F77 = i686-pc-mingw32-gfortran
		AR=i686-pc-mingw32-ar
		RANLIB = i686-pc-mingw32-ranlib
		LD=i686-pc-mingw32-ld
	- Add -mno-cygwin to CFLAGS in ${SUITE_SPARSE_ROOT}/SuiteSparse_config/SuiteSparse_config.mk.
		CFLAGS = -mno-cygwin
		==> Use the flag -mno-cygwin, which forces gcc to use MinGW.
	- Remove -lrt if you have it.
		LIB = -lm -lrt => LIB = -lm
	- Rename built libraries.
		The Microsoft linker recognizes the libraries compiled by gcc under Cygwin.
		What we need to do is to just rename them from *.a to *.lib.

[-] Building (VC).
	- Download.
		https://github.com/jlblancoc/suitesparse-metis-for-windows
	- CMake.

[-] Building (VC).
	NOTICE [important] >> Use suitesparse-metis-for-windows.
		The original SuiteSparse library has some link errors in using other S/W.

	- Open a solution file.
		${SUITESPARSE_HOME}/Project/SuiteSparse.sln.
			Do not build some of SuiteSparse libraries.
				UMFPACK & CSparse.
	- Change project settings.
		CHOLMOD project:
			1) Build static library, but not shared library.
			2) Change preprocessor definition.
				Delete _WINDOWS, _USRDLL, CHOLMOD_SHARED_EXPORTS.
				Add _LIB.
		CHOLMOD_demo & CHOLMOD_simple projects:
			1) Revise additional library dependency..
				Refer to Win32 platform.
			2) Change preprocessor definition.
				Delete _WINDOWS.
				Add _CONSOLE.
			3) Change subsystem.
				In Project Properties -> Linker -> System -> SubSystem:
					Windows (/SUBSYSTEM:WINDOWS) -> Console (/SUBSYSTEM:CONSOLE).

		Win64 platform이 AMD project에만 존재.
			AMD project를 제외한 뒤, 다른 모든 projects에 대해 x64 platform을 지운 후 다시 생성.
		몇몇 project의 경우 output directory가 올바르지 않음.
			아래와 같이 output directory를 변경 후 사용.
				$(SolutionDir)$(Platform)\$(Configuration)\
	- Set additional include path.
		../../SuiteSparse_config
		Project에 해당하는 header file path.
			e.g.)
				../../AMD/Include
				../../CAMD/Include
	- Set additional library path.
		In projects AMD_demo, CCOLAMD_demo, CHOLMOD_demo, CHOLMOD_simple, & COLAMD_demo.
			../$(Configuration) for Win32.
			../$(Platform)/$(Configuration) for Win64.

[-] Trouble shooting (VC).
	- idxtype error.
		<error>
			'idxtype': undeclared identifier
		<solution>
			typedef in cholmod_metis.c
				typedef idx_t idxtype;

	- rint error.
		METIS library error.
		<error>
			syntax error: '('
		<solution>
			REF [doc] >> metis_usage_guide.txt

	- WinMain error in project CHOLMOD_demo.
		<error>
			unresolved external symbol WinMain referenced in function "int __cdecl invoke_main(void)"
		<solution>
			In Project Properties -> Linker -> System -> SubSystem:
			Change from Windows (/SUBSYSTEM:WINDOWS) to Console (/SUBSYSTEM:CONSOLE).
