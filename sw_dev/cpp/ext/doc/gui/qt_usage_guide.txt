[-] General.
	- Site.
		http://www.qt.io/
		http://www.qt.io/developers/

		http://wiki.qt.io/Jom
		http://download.qt.io/official_releases/jom/

[-] Usage.
	REF [directory] >> ${SWDT_CPP_HOME}/ext/test/gui/qt5.

	- Compile meta objects by Meta Object Compiler (moc).
		moc object_name.h -o moc_object_name.cpp
	- Compile resources by Resource Compiler (rcc).
		(Optional) rcc -binary resource_name.qrc -o resource_name.rcc
		rcc resource_name.qrc -name resource_name -o qrc_resource_name.cpp
	- Generate Makefile.
		qmake -spec win32-msvc2015 project_name.pro
		qmake -spec win32-msvc2015 -tp vc project_name.pro
	- Make.
		jom
		make
		nmake

[-] Trouble shooting (Windows).
	- qmake.exe or QMAKESPEC.
		REF [site] >> http://stackoverflow.com/questions/5303634/qmake-qmakespec-has-not-been-set

		<error>
			qmake.exe failed to create a makefile Make sure you have a working Qt qmake on your PATH.
			QMAKESPEC has not been set, so configuration cannot be deduced.
		<cause>
			QMAKESPEC environment variable is not set.
		<solution>
			set QMAKESPEC=win32-msvc2010
			qmake -spec D:\usr\local\Qt-4.7.4\mkspecs\win32-msvc2010
		==> Can check by following commands.
			qmake -query QMAKESPEC
			qmake -query

[-] Trouble shooting (VC).
	- moc.exe or uic.exe.
		<error>
			MSB6006: "cmd.exe" exited with code3.
			The system cannot find the path specified.
			Moc'ing xxx.h
			Uic'ing xxx.ui
		<cause>
			Cannot find moc.exe & uic.exe.
		<solution>
			set QTDIR=${QT_HOME}
	- Qt platform loading error.
		<error>
			This application failed to start because it could not find or load the Qt platform plugin "windows" in "".
			Reinstalling the application may fix this problem.
		<cause>
			Qt library linking error.
		<solution>
			1) Copy qwindows.dll.
				REF [site] >> http://www.tripleboot.org/?p=138
				Copy ${QT_HOME}/plugins/platforms/qwindows.dll to ${EXECUTABLE_DIR}/platforms/qwindows.dll.
			2) Add Qt directory to $PATH.
