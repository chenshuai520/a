[-] General
	-. Site
		http://www.netlib.org/lapack/

		http://icl.cs.utk.edu/lapack-for-windows/
		http://icl.cs.utk.edu/lapack-for-windows/lapack/
		http://icl.cs.utk.edu/lapack-for-windows/clapack/
		http://icl.cs.utk.edu/lapack-for-windows/scalapack/

	-. Reference
		${GDT_HOME}/sw_dev/cpp/ext/src/linear_algebra/linear_algebra_library_usage_guide.txt

[-] Building (Win32/MinGW)
	-. Reference
		http://icl.cs.utk.edu/lapack-for-windows/lapack/
			Build Instructions to create LAPACK and LAPACKE 3.5.0 dlls for Windows with MinGW
		http://www.canerten.com/compile-lapack-and-blas-as-dll-on-windows/
	-. Using CMake
		[ref] mingw_usage_guide.txt
		0. download and uncompress Lapack
			http://icl.cs.utk.edu/lapack-for-windows/lapack/
		1. run Visual Studio Command Prompt.
		2. set the GNU runtime directory in PATH.
			set path=${MINGW_ROOT}/bin;%path%
		3. run cmake-gui in the command prompt.
			[ref] Reference about settings
			choose MinGW Makefiles
		4. set options.
			set the 'CMAKE_SH' option to ${MSYS_ROOT}/bin/sh.exe
			set the 'CMAKE_Fortran_COMPILER' option to ${MINGW_ROOT}/bin/gfortran.exe
			set the 'BUILD_SHARED_LIBS' option to ON
				이 option을 지정하지 않으면 .a library file 생성.
					libblas.a
					liblapack.a
					libtmglib.a
			set the 'CMAKE_GNUtoMS' option to ON
		5. configure and generate.
		6. run make.
			mingw32-make
			mingw32-make install
		==> 이유를 알 수 없지만 안되는 경우도 있음.
	-. Using Command Prompt
		1. set the GNU runtime directory in PATH.
			set path=${MINGW_ROOT}/bin;%path%
		2. change a directory to $LAPACK_HOME.
		3. build BLAS.
			mingw32-gfortran --shared -o blas.dll BLAS\SRC\*.f
		4. set $LD_LIBRARY_PATH.
			copy blas.dll to $LD_LIBRARY_PATH
			put a directory in which blas.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		5. build LAPACK.
			mingw32-gfortran --shared -o lapack.dll src\*.f blas.dll
			==> error message.
				mingw32-gfortran: error: CreateProcess: No such file or directory
		6. set $LD_LIBRARY_PATH.
			copy lapack.dll to $LD_LIBRARY_PATH
			put a directory in which lapack.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		7. build LAPACKE.
			mingw32-gfortran --shared -o lapacke.dll lapacke\src\*.f lapack.dll blas.dll
	-. Using MSYS
		1. (optional) set the GNU runtime directory in PATH.
			export PATH=${MINGW_ROOT}/bin:$PATH
		2. change a directory to $LAPACK_HOME.
		3. build BLAS.
			mingw32-gfortran --shared -o blas.dll BLAS/SRC/*.f -O
			i686-w64-mingw32-gfortran --shared -o blas.dll BLAS/SRC/*.f -O
		4. set $LD_LIBRARY_PATH.
			copy blas.dll to $LD_LIBRARY_PATH
			put a directory in which blas.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		5. build LAPACK.
			mingw32-gfortran --shared -o lapack.dll src/*.f blas.dll -O
			i686-w64-mingw32-gfortran --shared -o lapack.dll src/*.f blas.dll -O
			==> error message.
				mingw32-gfortran: error: CreateProcess: No such file or directory
		6. set $LD_LIBRARY_PATH.
			copy lapack.dll to $LD_LIBRARY_PATH
			put a directory in which lapack.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		7. build LAPACKE.
			mingw32-gfortran --shared -o lapacke.dll lapacke/src/*.f lapack.dll blas.dll -O
			i686-w64-mingw32-gfortran --shared -o lapacke.dll lapacke/src/*.f lapack.dll blas.dll -O
	-. Using Cygwin
		1. change a directory to $LAPACK_HOME.
		2. build BLAS.
			i686-pc-mingw32-gfortran --shared -o blas.dll BLAS/SRC/*.f -O
			i686-w64-mingw32-gfortran --shared -o blas.dll BLAS/SRC/*.f -O
		3. set $LD_LIBRARY_PATH.
			copy blas.dll to $LD_LIBRARY_PATH
			put a directory in which blas.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		4. build LAPACK.
			i686-pc-mingw32-gfortran --shared -o lapack.dll src/*.f blas.dll -O
			i686-w64-mingw32-gfortran --shared -o lapack.dll src/*.f blas.dll -O
			==> error message.
				collect2: error: ld returned 1 exit status
		5. set $LD_LIBRARY_PATH.
			copy lapack.dll to $LD_LIBRARY_PATH
			put a directory in which lapack.dll exists in $LD_LIBRARY_PATH
				export LD_LIBRARY_PATH=.:${MINGW_ROOT}/bin:$LD_LIBRARY_PATH
		6. build LAPACKE.
			i686-pc-mingw32-gfortran --shared -o lapacke.dll lapacke/src/*.f lapack.dll blas.dll -O
			i686-w64-mingw32-gfortran --shared -o lapacke.dll lapacke/src/*.f lapack.dll blas.dll -O
