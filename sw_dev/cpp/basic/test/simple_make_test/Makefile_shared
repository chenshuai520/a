SOURCES=add.cpp sub.cpp
OBJECTS=$(SOURCES:.cpp=.o)
LIB_BASE_NAME=arithmetic

CC=
CXX=g++
LD=ld
AR=ar
RANLIB=ranlib
RM=rm -f

CFLAGS=
#-- Linux
#CXXFLAGS=-c -Wall -fPIC
#LDFLAGS=-shared -Wl,-soname,$(LIB_NAME)
#-- Cygwin
#CXXFLAGS=-c -Wall -mdll
#LDFLAGS=-shared -Wl,-soname,$(LIB_NAME)
#-- MinGW
CXXFLAGS=-c -Wall -mdll -DBUILD_SHARED_LIB -DARITHMETIC_LIB_EXPORT
LDFLAGS=-shared -Wl,-soname,$(LIB_NAME)

#-- Linux
#LIB_NAME=lib$(LIB_BASE_NAME).so
#-- Cygwin & MinGW
LIB_NAME=lib$(LIB_BASE_NAME).dll
IMP_LIB_NAME=lib$(LIB_BASE_NAME)_dll.lib
DEF_LIB_NAME=lib$(LIB_BASE_NAME)_dll.def

all: $(SOURCES) $(LIB_NAME)
	
$(LIB_NAME): $(OBJECTS) 
#-- Linux
#	$(CXX) -o $@ $^ $(LDFLAGS)
#-- Cygwin
#	dlltool --kill-at --export-all --output-def=$(DEF_LIB_NAME) $^
#	dlltool --input-def $(DEF_LIB_NAME) --dllname $@ --output-lib $(IMP_LIB_NAME)
#	dllwrap --mno-cygwin --def $(DEF_LIB_NAME) --dllname=$@ $^
#-- MinGW
	dlltool --kill-at --export-all --output-def=$(DEF_LIB_NAME) $^
	dlltool --input-def $(DEF_LIB_NAME) --dllname $@ --output-lib $(IMP_LIB_NAME)
	dllwrap --def $(DEF_LIB_NAME) --dllname=$@ $^

.cpp.o:
	$(CXX) -o $@ $< $(CXXFLAGS)

clean:
	$(RM) $(LIB_NAME) $(IMP_LIB_NAME) $(DEF_LIB_NAME) *.o *~ core
